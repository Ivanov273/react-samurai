{"version":3,"file":"static/js/740.c60293aa.chunk.js","mappings":"oLACA,GAAgB,UAAY,2BAA2B,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,8BAA8B,OAAS,yB,mBCcnL,EAZmB,SAACA,GAEhB,OAEI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,UAAC,KAAD,CAASD,UAAW,SAAAE,GAAO,OAAIA,EAAQC,SAAWF,EAAAA,OAAWA,EAAAA,QACpDG,GAAI,YAAcL,EAAMM,GADjC,cACuCN,EAAMO,WCMzD,EAZoB,SAACP,GACjB,OACI,0BACA,0BACA,gBAAKC,UAAWC,EAAAA,aAAhB,SAAiCF,EAAMQ,Y,iDCsC/C,EApCgB,SAACR,GACb,IAGIS,EAAaT,EAAMU,WAAWC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYL,KAAMK,EAAEL,KAAiBD,GAAIM,EAAEN,IAAZM,EAAEN,OACxEO,EAAkBb,EAAMc,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAwBP,KAAMO,EAAEP,MAAdO,EAAET,OAClE,OAAIN,EAAMgB,MAEN,iBAAKf,UAAWC,EAAAA,UAAhB,WACI,gBAAKD,UAAWC,EAAAA,QAAhB,UACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKO,OAGT,iBAAKR,UAAWC,EAAAA,SAAhB,UACKW,GACD,0BACI,SAACI,EAAD,CAAiBC,SAhBjB,SAACC,GACbnB,EAAMoB,aAAaD,EAAOE,oBAIP,SAAC,KAAD,CAAUhB,GAAI,YA+BrCY,GAAkBK,EAAAA,EAAAA,GAAU,CAE5BC,KAAM,aAFYD,EAbL,SAACtB,GACd,IAAOwB,EAAcxB,EAAdwB,aACP,OACI,kBAAMN,SAAUM,EAAhB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBnB,KAAK,SAASoB,UAAWC,EAAAA,GAAmBC,KAAK,OAAOC,SAAU,CAACC,EAAAA,GAAYC,EAAAA,GAAWC,EAAAA,SAE1H,mBAAQJ,KAAK,SAAb,0B,6BCjCpBK,GAAoBC,EAAAA,EAAAA,GAAkBC,GAmB1C,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAhBD,SAACC,GACnB,MAAO,CACHC,UAAWD,EAAME,WAAWD,UAC5B9B,WAAY6B,EAAME,WAAW/B,WAC7BgC,QAASH,EAAME,WAAWD,UAC1B1B,SAAUyB,EAAME,WAAW3B,SAC3BE,KAAMuB,EAAMvB,KAAK2B,WAGA,SAACC,GACtB,MAAO,CACHxB,aAAc,SAACD,GACXyB,GAASC,EAAAA,EAAAA,GAAuB1B,SAKxCgB,EAAAA,EADJ,CAEED","sources":["webpack://react-social/./src/Component/Dialogs/Dialogs.module.css?ac53","Component/Dialogs/DialogItem/DialogItem.jsx","Component/Dialogs/MessageItem/MessageItem.jsx","Component/Dialogs/Dialogs.jsx","Component/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dialogs_container__6MC+f\",\"dialog\":\"Dialogs_dialog__yfbrS\",\"messages\":\"Dialogs_messages__Dik+M\",\"message_item\":\"Dialogs_message_item__X7hkX\",\"active\":\"Dialogs_active__+A8tR\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink className={navData => navData.isActive ? s.active : s.dialog}\r\n                     to={'/dialogs/' + props.id}> {props.name}</NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div>\r\n        <div>\r\n        <div className={s.message_item}>{props.text}</div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderFieldDialog} from \"../FormControls/FormsControl\";\r\nimport {alphaNumeric, maxLength30, minLength2} from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let AddDialog = (values) => {\r\n        props.onaddDialogs(values.dialog)\r\n    }\r\n    let DialogMass = props.DialogData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let MessagesElement = props.TextData.map(t => <MessageItem key={t.id} text={t.text}/>)\r\n    if(!props.Auth) return <Navigate to={\"/login\"} />\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialog_items}>\r\n                    {DialogMass}\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                {MessagesElement}\r\n                <div>\r\n                    <DialogFormRedux onSubmit={AddDialog}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialodForm=(props)=>{\r\n    const {handleSubmit}=props\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <Field placeholder='Enter your message' name='dialog' component={renderFieldDialog} type='text' validate={[maxLength30,minLength2,alphaNumeric]} />\r\n            </div>\r\n                        <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default Dialogs\r\nlet DialogFormRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'loginform'\r\n})(DialodForm)\r\n\r\n","import React from 'react'\r\nimport {ActionCreatorAddDialog, ActionCreatorUpdateDialogText} from \"../../Redux/Reducer-Dialog\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthContainer} from \"../../HOC/AuthHOC\";\r\nimport {compose} from \"redux\";\r\n\r\nlet RedirectComponent = WithAuthContainer(Dialogs)\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newDialog: state.DialogPage.newDialog,\r\n        DialogData: state.DialogPage.DialogData,\r\n        newText: state.DialogPage.newDialog,\r\n        TextData: state.DialogPage.TextData,\r\n        Auth: state.Auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onaddDialogs: (values) => {\r\n            dispatch(ActionCreatorAddDialog(values))\r\n        }\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthContainer\r\n)(RedirectComponent)\r\n"],"names":["props","className","s","navData","isActive","to","id","name","text","DialogMass","DialogData","map","d","MessagesElement","TextData","t","Auth","DialogFormRedux","onSubmit","values","onaddDialogs","dialog","reduxForm","form","handleSubmit","Field","placeholder","component","renderFieldDialog","type","validate","maxLength30","minLength2","alphaNumeric","RedirectComponent","WithAuthContainer","Dialogs","compose","connect","state","newDialog","DialogPage","newText","isAuth","dispatch","ActionCreatorAddDialog"],"sourceRoot":""}