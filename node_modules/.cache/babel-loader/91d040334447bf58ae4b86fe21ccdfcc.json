{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\HOC\\\\SuspenseHOC.js\";\nimport React, { Component, Suspense } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  Auth: state.Auth.isAuth\n});\n\nexport const WithSuspensehContainer = Component => {\n  //class RedirectComponent extends React.Component {\n  //render(){\n  // if(!this.props.Auth) return <Navigate to={\"/login\"} />\n  //    return <Component {...this.props} />\n  //  }\n  //}\n  //let newRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 32\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}; //{<Suspense fallback={<div>Loading...</div>}>\n//  <DialogsContainer/></Suspense>                            }\n\n/*\r\n  let AuthContainer = (props)=>{\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    return AuthContainer\r\n*/\n\n/*\r\nclass RedirectComponent extends React.Component {\r\n    render(){\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nreturn RedirectComponent\r\n\r\n */\n\n_c = WithSuspensehContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSuspensehContainer\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/HOC/SuspenseHOC.js"],"names":["React","Component","Suspense","Navigate","connect","mapStateToPropsForRedirect","state","Auth","isAuth","WithSuspensehContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AACA,IAAIC,0BAA0B,GAAIC,KAAD,KAAU;AACvCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC;AADsB,CAAV,CAAjC;;AAGA,OAAO,MAAMC,sBAAsB,GAAIR,SAAD,IAAc;AAChD;AACI;AACG;AACH;AACF;AACF;AAEA;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,2BACH,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAZM,C,CAeP;AACE;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAjCaQ,sB","sourcesContent":["import React, {Component, Suspense} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state)=>({\r\n    Auth: state.Auth.isAuth\r\n})\r\nexport const WithSuspensehContainer = (Component) =>{\r\n    //class RedirectComponent extends React.Component {\r\n        //render(){\r\n           // if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        //    return <Component {...this.props} />\r\n      //  }\r\n    //}\r\n\r\n    //let newRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return <Suspense fallback={<div>Loading...</div>}>\r\n        <Component/></Suspense>\r\n\r\n}\r\n\r\n\r\n//{<Suspense fallback={<div>Loading...</div>}>\r\n  //  <DialogsContainer/></Suspense>                            }\r\n/*\r\n  let AuthContainer = (props)=>{\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    return AuthContainer\r\n*/\r\n/*\r\nclass RedirectComponent extends React.Component {\r\n    render(){\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nreturn RedirectComponent\r\n\r\n */"]},"metadata":{},"sourceType":"module"}