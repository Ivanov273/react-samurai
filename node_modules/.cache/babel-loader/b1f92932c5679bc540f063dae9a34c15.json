{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Profile\\\\ProfileContainer.js\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { ProfileThunk, ProfileThunkStatus, SetUsersProfile, UpdateProfileThunkStatus } from \"../../Readux/Reducer-Profile\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { WithAuthContainer } from \"../../HOC/AuthHOC\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withRouter = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    const params = useParams();\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props,\n      params: params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n    return [useParams];\n  });\n};\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userid = this.props.params.userId;\n\n    if (!userid) {\n      userid = 2;\n    }\n\n    this.props.ProfileThunk(userid);\n    this.props.ProfileThunkStatus(5); //this.props.UpdateProfileThunkStatuss('cascasc')\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n} //let RedirectComponent = WithAuthContainer(ProfileContainer)\n\n\nlet mapStateToProps = state => ({\n  profile: state.ProfilePage.profile,\n  profilestatus: state.ProfilePage.profilestatus\n}); //const ProfileContainerwithRouter = withRouter(RedirectComponent)\n\n\nexport default compose(connect(mapStateToProps, {\n  ProfileThunk,\n  ProfileThunkStatus,\n  UpdateProfileThunkStatus\n}), withRouter, WithAuthContainer)(ProfileContainer);","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Profile/ProfileContainer.js"],"names":["React","Profile","axios","connect","ProfileThunk","ProfileThunkStatus","SetUsersProfile","UpdateProfileThunkStatus","Navigate","useParams","WithAuthContainer","compose","withRouter","WrappedComponent","props","params","ProfileContainer","Component","componentDidMount","userid","userId","render","profile","mapStateToProps","state","ProfilePage","profilestatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,YADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,wBAJJ,QAKO,8BALP;AAMA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,kBAAlC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAGA,MAAMC,UAAU,GAAGC,gBAAgB;AAAA;;AAAA,YAAIC,KAAK,IAAI;AAAA;;AAE5C,UAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,wBACI,QAAC,gBAAD,OACQK,KADR;AAEI,MAAA,MAAM,EAAEC;AAFZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GATkC;AAAA,YAEhBN,SAFgB;AAAA;AAAA,CAAnC;;AAWA,MAAMO,gBAAN,SAA+BhB,KAAK,CAACiB,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,MAA/B;;AACA,QAAG,CAACD,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKL,KAAL,CAAWV,YAAX,CAAwBe,MAAxB;AACA,SAAKL,KAAL,CAAWT,kBAAX,CAA8B,CAA9B,EANgB,CAOhB;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,6BACH,QAAC,OAAD,OAAa,KAAKP,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWQ;AAA7C;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAf0C,C,CAkB/C;;;AACA,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BF,EAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADG;AAE9BI,EAAAA,aAAa,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFH,CAAZ,CAAtB,C,CAMA;;;AACA,eAAef,OAAO,CAACR,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA,YAAD;AAAcC,EAAAA,kBAAd;AAAiCE,EAAAA;AAAjC,CAAlB,CAAR,EAClBK,UADkB,EAElBF,iBAFkB,CAAP,CAEQM,gBAFR,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ProfileThunk,\r\n    ProfileThunkStatus,\r\n    SetUsersProfile,\r\n    UpdateProfileThunkStatus\r\n} from \"../../Readux/Reducer-Profile\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {WithAuthContainer} from \"../../HOC/AuthHOC\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userid = this.props.params.userId\r\n        if(!userid){\r\n            userid = 2\r\n        }\r\n        this.props.ProfileThunk(userid)\r\n        this.props.ProfileThunkStatus(5)\r\n        //this.props.UpdateProfileThunkStatuss('cascasc')\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n//let RedirectComponent = WithAuthContainer(ProfileContainer)\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    profilestatus: state.ProfilePage.profilestatus\r\n\r\n})\r\n\r\n//const ProfileContainerwithRouter = withRouter(RedirectComponent)\r\nexport default compose(connect(mapStateToProps, {ProfileThunk,ProfileThunkStatus,UpdateProfileThunkStatus}),\r\n    withRouter,\r\n    WithAuthContainer)(ProfileContainer)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}