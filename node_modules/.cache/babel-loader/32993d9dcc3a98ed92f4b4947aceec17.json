{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Profile\\\\MyPosts\\\\MyPost.js\";\nimport React from 'react';\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => value || typeof value === 'number' ? undefined : 'Required';\n\nconst maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nconst maxLength15 = maxLength(15);\nexport const minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined;\nexport const minLength2 = minLength(2);\n\nconst number = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined;\n\nconst minValue = min => value => value && value < min ? `Must be at least ${min}` : undefined;\n\nconst minValue13 = minValue(13);\n\nconst email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;\n\nconst tooYoung = value => value && value < 13 ? 'You do not meet the minimum age requirement!' : undefined;\n\nconst aol = value => value && /.+@aol\\.com/.test(value) ? 'Really? You still use AOL for your email?' : undefined;\n\nconst alphaNumeric = value => value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Only alphanumeric characters' : undefined;\n\nexport const phoneNumber = value => value && !/^(0|[1-9][0-9]{9})$/i.test(value) ? 'Invalid phone number, must be 10 digits' : undefined;\n\nconst renderField = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        placeholder: label,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\nconst MyPost = props => {\n  let PostMass = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.text,\n    like: p.like\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 41\n  }, this));\n\n  let addPost = value => {\n    props.onaddDialogs(value.profile);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProfileFormRedux, {\n        onSubmit: addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), PostMass]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPost;\n\nconst ProfileForm = props => {\n  const {\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: \"Enter your message\",\n        name: \"profile\",\n        component: renderField,\n        type: \"text\",\n        validate: [required, maxLength15, minLength2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ProfileForm;\nexport default MyPost;\nlet ProfileFormRedux = reduxForm({\n  // a unique name for the form\n  form: 'profileform'\n})(ProfileForm);\n_c3 = ProfileFormRedux;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyPost\");\n$RefreshReg$(_c2, \"ProfileForm\");\n$RefreshReg$(_c3, \"ProfileFormRedux\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Profile/MyPosts/MyPost.js"],"names":["React","Post","Field","reduxForm","required","value","undefined","maxLength","max","length","maxLength15","minLength","min","minLength2","number","isNaN","Number","minValue","minValue13","email","test","tooYoung","aol","alphaNumeric","phoneNumber","renderField","input","label","type","meta","touched","error","warning","MyPost","props","PostMass","posts","map","p","text","like","id","addPost","onaddDialogs","profile","ProfileForm","handleSubmit","ProfileFormRedux","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAKA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GAAqCC,SAArC,GAAiD,UAA5E;;AACA,MAAMC,SAAS,GAAGC,GAAG,IAAIH,KAAK,IAC1BA,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAeD,GAAxB,GAA+B,WAAUA,GAAI,qBAA7C,GAAoEF,SADxE;;AAEA,MAAMI,WAAW,GAAGH,SAAS,CAAC,EAAD,CAA7B;AACA,OAAO,MAAMI,SAAS,GAAGC,GAAG,IAAIP,KAAK,IACjCA,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAeG,GAAxB,GAA+B,WAAUA,GAAI,qBAA7C,GAAoEN,SADjE;AAEP,OAAO,MAAMO,UAAU,GAAGF,SAAS,CAAC,CAAD,CAA5B;;AACP,MAAMG,MAAM,GAAGT,KAAK,IAChBA,KAAK,IAAIU,KAAK,CAACC,MAAM,CAACX,KAAD,CAAP,CAAd,GAAgC,kBAAhC,GAAqDC,SADzD;;AAEA,MAAMW,QAAQ,GAAGL,GAAG,IAAIP,KAAK,IACzBA,KAAK,IAAIA,KAAK,GAAGO,GAAjB,GAAwB,oBAAmBA,GAAI,EAA/C,GAAmDN,SADvD;;AAEA,MAAMY,UAAU,GAAGD,QAAQ,CAAC,EAAD,CAA3B;;AACA,MAAME,KAAK,GAAGd,KAAK,IACfA,KAAK,IAAI,CAAC,4CAA4Ce,IAA5C,CAAiDf,KAAjD,CAAV,GACM,uBADN,GAEMC,SAHV;;AAIA,MAAMe,QAAQ,GAAGhB,KAAK,IAClBA,KAAK,IAAIA,KAAK,GAAG,EAAjB,GACM,8CADN,GAEMC,SAHV;;AAIA,MAAMgB,GAAG,GAAGjB,KAAK,IACbA,KAAK,IAAI,cAAce,IAAd,CAAmBf,KAAnB,CAAT,GACM,2CADN,GAEMC,SAHV;;AAIA,MAAMiB,YAAY,GAAGlB,KAAK,IACtBA,KAAK,IAAI,iBAAiBe,IAAjB,CAAsBf,KAAtB,CAAT,GACM,8BADN,GAEMC,SAHV;;AAIA,OAAO,MAAMkB,WAAW,GAAGnB,KAAK,IAC5BA,KAAK,IAAI,CAAC,uBAAuBe,IAAvB,CAA4Bf,KAA5B,CAAV,GACM,yCADN,GAEMC,SAHH;;AAKP,MAAMmB,WAAW,GAAG;AAAA,MAAC;AACIC,IAAAA,KADJ;AAEIC,IAAAA,KAFJ;AAGIC,IAAAA,IAHJ;AAIIC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AAJV,GAAD;AAAA,sBAMhB;AAAA,4BACI;AAAA,gBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI,sBAAWD,KAAX;AAAkB,QAAA,WAAW,EAAEC,KAA/B;AAAsC,QAAA,IAAI,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,OAAO,KACFC,KAAK,iBAAI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAAV,IACIC,OAAO,iBAAI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAFZ,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANgB;AAAA,CAApB;;AAiBA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,MAAIC,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,CAAC,CAACC,IAAjB;AAAkC,IAAA,IAAI,EAAED,CAAC,CAACE;AAA1C,KAA4BF,CAAC,CAACG,EAA9B;AAAA;AAAA;AAAA;AAAA,UAArB,CAAf;;AACA,MAAIC,OAAO,GAAIrC,KAAD,IAAW;AACrB6B,IAAAA,KAAK,CAACS,YAAN,CAAmBtC,KAAK,CAACuC,OAAzB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,6BACG,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKP,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAfD;;KAAMF,M;;AAkBN,MAAMY,WAAW,GAAEX,KAAD,IAAS;AACvB,QAAM;AAACY,IAAAA;AAAD,MAAeZ,KAArB;AACA,sBACI;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,oBAAnB;AAAwC,QAAA,IAAI,EAAC,SAA7C;AAAwD,QAAA,SAAS,EAAErB,WAAnE;AAAgF,QAAA,IAAI,EAAC,MAArF;AAA4F,QAAA,QAAQ,EAAE,CAACrB,QAAD,EAAWM,WAAX,EAAwBG,UAAxB;AAAtG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAXD;;MAAMgC,W;AAYN,eAAeZ,MAAf;AACA,IAAIc,gBAAgB,GAAG5C,SAAS,CAAC;AAC7B;AACA6C,EAAAA,IAAI,EAAE;AAFuB,CAAD,CAAT,CAGpBH,WAHoB,CAAvB;MAAIE,gB","sourcesContent":["import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required')\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\nconst maxLength15 = maxLength(15)\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\r\nexport const minLength2 = minLength(2)\r\nconst number = value =>\r\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue13 = minValue(13)\r\nconst email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined\r\nconst tooYoung = value =>\r\n    value && value < 13\r\n        ? 'You do not meet the minimum age requirement!'\r\n        : undefined\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value)\r\n        ? 'Really? You still use AOL for your email?'\r\n        : undefined\r\nconst alphaNumeric = value =>\r\n    value && /[^a-zA-Z0-9 ]/i.test(value)\r\n        ? 'Only alphanumeric characters'\r\n        : undefined\r\nexport const phoneNumber = value =>\r\n    value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n        ? 'Invalid phone number, must be 10 digits'\r\n        : undefined\r\n\r\nconst renderField = ({\r\n                         input,\r\n                         label,\r\n                         type,\r\n                         meta: { touched, error, warning }\r\n                     }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type} />\r\n            {touched &&\r\n                ((error && <span>{error}</span>) ||\r\n                    (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst MyPost = (props) => {\r\n\r\n    let PostMass = props.posts.map(p => <Post message={p.text} key={p.id} like={p.like}/>)\r\n    let addPost = (value) => {\r\n        props.onaddDialogs(value.profile)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n               <ProfileFormRedux onSubmit={addPost} />\r\n            </div>\r\n            {PostMass}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileForm=(props)=>{\r\n    const {handleSubmit}=props\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <Field placeholder='Enter your message' name='profile'  component={renderField} type='text' validate={[required, maxLength15, minLength2]} />\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default MyPost;\r\nlet ProfileFormRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'profileform'\r\n})(ProfileForm)\r\n"]},"metadata":{},"sourceType":"module"}