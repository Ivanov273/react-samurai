{"ast":null,"code":"import axios from \"axios\";\nimport { UserApi } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SETPAGE = 'SETPAGE';\nconst TOGLE = 'TOGLE';\nconst TOGLEFOLLOW = 'TOGLEFOLLOW';\nlet initstate = {\n  users: [],\n  TotalCount: 50,\n  PageSize: 10,\n  currentPage: 1,\n  isfetching: true,\n  togglefollow: []\n};\n\nconst reducerUsers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SETUSERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SETPAGE:\n      return { ...state,\n        currentPage: action.page\n      };\n\n    case TOGLE:\n      return { ...state,\n        isfetching: action.fetching\n      };\n\n    case TOGLEFOLLOW:\n      return { ...state,\n        togglefollow: action.fetching ? [...state.togglefollow, action.userid] : state.togglefollow.filter(id => id != action.userid) // [...state.togglefollow,action.userid]\n\n      };\n\n    default:\n      return state;\n  }\n}; //axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response=>{\n//  console.log(response.data.items)\n//})\n\n\nexport const OnFollow = userid => ({\n  type: FOLLOW,\n  userid\n});\n_c = OnFollow;\nexport const UnFollow = userid => ({\n  type: UNFOLLOW,\n  userid\n});\n_c2 = UnFollow;\nexport const SetUsers = users => ({\n  type: SETUSERS,\n  users\n});\n_c3 = SetUsers;\nexport const SetPage = page => ({\n  type: SETPAGE,\n  page\n});\n_c4 = SetPage;\nexport const Togle = fetching => ({\n  type: TOGLE,\n  fetching\n});\n_c5 = Togle;\nexport const TogleFollow = (fetching, userid) => ({\n  type: TOGLEFOLLOW,\n  fetching,\n  userid\n});\n_c6 = TogleFollow;\nexport const ThunkCreatorGetUsers = function (currentPage) {\n  let pagesize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return dispatch => {\n    dispatch(Togle(true));\n    dispatch(SetPage(currentPage));\n    UserApi.getUserApi(currentPage, pagesize).then(data => {\n      dispatch(SetUsers(data.items));\n      dispatch(Togle(false));\n    });\n  };\n};\n_c7 = ThunkCreatorGetUsers;\nexport const ThunkCreatorDeleteUsers = id => {\n  return dispatch => {\n    dispatch(TogleFollow(true, id));\n    UserApi.deletetUserFollow(id).then(data => {\n      if (data.resultCode === 0) dispatch(UnFollow(id));\n      dispatch(TogleFollow(false, id));\n    });\n  };\n};\n_c8 = ThunkCreatorDeleteUsers;\nexport const ThunkCreatorFollowUsers = id => {\n  return dispatch => {\n    dispatch(TogleFollow(true, id));\n    UserApi.postUserFollow(id).then(data => {\n      if (data.resultCode === 0) dispatch(UnFollow(id));\n      dispatch(TogleFollow(false, id));\n    });\n  };\n};\n_c9 = ThunkCreatorFollowUsers;\nexport default reducerUsers;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"OnFollow\");\n$RefreshReg$(_c2, \"UnFollow\");\n$RefreshReg$(_c3, \"SetUsers\");\n$RefreshReg$(_c4, \"SetPage\");\n$RefreshReg$(_c5, \"Togle\");\n$RefreshReg$(_c6, \"TogleFollow\");\n$RefreshReg$(_c7, \"ThunkCreatorGetUsers\");\n$RefreshReg$(_c8, \"ThunkCreatorDeleteUsers\");\n$RefreshReg$(_c9, \"ThunkCreatorFollowUsers\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-Users.js"],"names":["axios","UserApi","FOLLOW","UNFOLLOW","SETUSERS","SETPAGE","TOGLE","TOGLEFOLLOW","initstate","users","TotalCount","PageSize","currentPage","isfetching","togglefollow","reducerUsers","state","action","type","map","u","id","userid","followed","page","fetching","filter","OnFollow","UnFollow","SetUsers","SetPage","Togle","TogleFollow","ThunkCreatorGetUsers","pagesize","dispatch","getUserApi","then","data","items","ThunkCreatorDeleteUsers","deletetUserFollow","resultCode","ThunkCreatorFollowUsers","postUserFollow"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {UserApi} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SETUSERS = 'SETUSERS'\r\nconst SETPAGE = 'SETPAGE'\r\nconst TOGLE = 'TOGLE'\r\nconst TOGLEFOLLOW = 'TOGLEFOLLOW'\r\n\r\nlet initstate = {\r\n    users: [],\r\n    TotalCount: 50,\r\n    PageSize: 10,\r\n    currentPage: 1,\r\n    isfetching: true,\r\n    togglefollow: []\r\n\r\n}\r\n\r\nconst reducerUsers = (state = initstate, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userid) {\r\n\r\n                        return {...u, followed: false}\r\n\r\n                    }\r\n                    return u\r\n\r\n                })\r\n\r\n            }\r\n        case SETUSERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SETPAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case TOGLE:\r\n            return {\r\n                ...state,\r\n                isfetching: action.fetching\r\n            }\r\n        case TOGLEFOLLOW:\r\n\r\n            return {\r\n                ...state,\r\n                togglefollow: action.fetching\r\n                    ?\r\n                    [...state.togglefollow,action.userid]\r\n                    :\r\n                    state.togglefollow.filter(id=> id !=action.userid)\r\n                   // [...state.togglefollow,action.userid]\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n//axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response=>{\r\n  //  console.log(response.data.items)\r\n//})\r\nexport const OnFollow = (userid) => ({type: FOLLOW, userid})\r\nexport const UnFollow = (userid) => ({type: UNFOLLOW, userid})\r\nexport const SetUsers = (users) => ({type: SETUSERS, users})\r\nexport const SetPage = (page) => ({type: SETPAGE, page})\r\nexport const Togle = (fetching) => ({type: TOGLE, fetching})\r\nexport const TogleFollow = (fetching,userid) => ({type: TOGLEFOLLOW, fetching,userid})\r\n\r\nexport const ThunkCreatorGetUsers = (currentPage,pagesize=10)=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch(Togle(true))\r\n        dispatch(SetPage(currentPage))\r\n        UserApi.getUserApi(currentPage, pagesize).then(data => {\r\n            dispatch(SetUsers(data.items))\r\n            dispatch(Togle(false))\r\n        })\r\n    }\r\n}\r\nexport const ThunkCreatorDeleteUsers = (id)=>{\r\n    return (dispatch)=>{\r\n        dispatch(TogleFollow(true, id))\r\n        UserApi.deletetUserFollow(id).then(data => {\r\n            if (data.resultCode === 0)\r\n                dispatch(UnFollow(id))\r\n            dispatch(TogleFollow(false, id))\r\n        })\r\n    }\r\n}\r\nexport const ThunkCreatorFollowUsers = (id)=>{\r\n    return (dispatch)=>{\r\n        dispatch(TogleFollow(true, id))\r\n        UserApi.postUserFollow(id).then(data => {\r\n            if (data.resultCode === 0)\r\n                dispatch(UnFollow(id))\r\n            dispatch(TogleFollow(false, id))\r\n        })\r\n    }\r\n}\r\nexport default reducerUsers"]},"metadata":{},"sourceType":"module"}