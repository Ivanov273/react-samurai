{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Navigate } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { LoginThunk } from \"../../Readux/Reducer-Auth\";\nimport { input } from \"../FormControls/FormControls\";\nimport { maxLength, required } from \"../../utils/validators/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLeigth10 = maxLength(30);\n\nconst FormLogin = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          type: 'input',\n          component: input,\n          name: \"email\",\n          placeholder: \"login\",\n          validate: [required, maxLeigth10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          type: 'password',\n          component: input,\n          name: \"password\",\n          placeholder: \"password\",\n          validate: [required, maxLeigth10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          type: 'checkbox',\n          component: input,\n          name: \"rememberme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FormLogin;\nconst LoginFormRedux = reduxForm({\n  form: 'simple' // a unique identifier for this form\n\n})(FormLogin);\n_c2 = LoginFormRedux;\n\nconst Loginpage = props => {\n  const onSubmit = formdata => {\n    console.log(formdata);\n    props.LoginThunk(formdata.email, formdata.password, formdata.rememberme);\n  };\n\n  if (props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: '/profile'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginFormRedux, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_c3 = Loginpage;\n\nlet mapStateToPros = state => {\n  return {\n    isAuth: state.Auth.isAuth\n  };\n};\n\nexport default connect(mapStateToPros, {\n  LoginThunk\n})(Loginpage);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormLogin\");\n$RefreshReg$(_c2, \"LoginFormRedux\");\n$RefreshReg$(_c3, \"Loginpage\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Login/Login.jsx"],"names":["React","Field","reduxForm","Navigate","connect","LoginThunk","input","maxLength","required","maxLeigth10","FormLogin","props","handleSubmit","LoginFormRedux","form","Loginpage","onSubmit","formdata","console","log","email","password","rememberme","isAuth","mapStateToPros","state","Auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,SAAQC,KAAR,QAAoB,8BAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,mCAAlC;;AACA,MAAMC,WAAW,GAAGF,SAAS,CAAC,EAAD,CAA7B;;AACA,MAAMG,SAAS,GAAIC,KAAD,IAAW;AAEzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,2BACI;AAAA,8BACI;AAAA,+BACA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,OAAb;AAAsB,UAAA,SAAS,EAAEN,KAAjC;AAAwC,UAAA,IAAI,EAAC,OAA7C;AAAqD,UAAA,WAAW,EAAC,OAAjE;AAAyE,UAAA,QAAQ,EAAE,CAACE,QAAD,EAAUC,WAAV;AAAnF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAIQ;AAAA,+BACJ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,UAAb;AAAyB,UAAA,SAAS,EAAEH,KAApC;AAA2C,UAAA,IAAI,EAAC,UAAhD;AAA2D,UAAA,WAAW,EAAC,UAAvE;AAAkF,UAAA,QAAQ,EAAE,CAACE,QAAD,EAAUC,WAAV;AAA5F;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cAJR,eAMc;AAAA,+BACV,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,UAAb;AAAyB,UAAA,SAAS,EAAEH,KAApC;AAA2C,UAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,cANd,eASY;AAAA,+BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAnBD;;KAAMI,S;AAoBN,MAAMG,cAAc,GAAGX,SAAS,CAAC;AAC7BY,EAAAA,IAAI,EAAE,QADuB,CACd;;AADc,CAAD,CAAT,CAEpBJ,SAFoB,CAAvB;MAAMG,c;;AAGN,MAAME,SAAS,GAAIJ,KAAD,IAAS;AAC3B,QAAMK,QAAQ,GAAEC,QAAD,IAAY;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACIN,IAAAA,KAAK,CAACN,UAAN,CAAiBY,QAAQ,CAACG,KAA1B,EAAgCH,QAAQ,CAACI,QAAzC,EAAkDJ,QAAQ,CAACK,UAA3D;AACP,GAHD;;AAIA,MAAIX,KAAK,CAACY,MAAV,EAEI,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA,sBAAO;AAAA,2BACH,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEP;AAA1B;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAZD;;MAAMD,S;;AAcN,IAAIS,cAAc,GAAGC,KAAD,IAAS;AACzB,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADhB,GAAP;AAGH,CAJD;;AAKA,eAAenB,OAAO,CAACoB,cAAD,EAAiB;AAACnB,EAAAA;AAAD,CAAjB,CAAP,CAAsCU,SAAtC,CAAf","sourcesContent":["import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Navigate} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../Readux/Reducer-Auth\";\r\nimport {input} from \"../FormControls/FormControls\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\nconst maxLeigth10 = maxLength(30)\r\nconst FormLogin = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                <Field type={'input'} component={input} name='email' placeholder='login' validate={[required,maxLeigth10]} />\r\n                </div>\r\n                    <div>\r\n                <Field type={'password'} component={input} name='password' placeholder='password' validate={[required,maxLeigth10]} />\r\n                    </div><div>\r\n                <Field type={'checkbox'} component={input} name='rememberme' />\r\n                    </div>\r\n                        <div>\r\n                    <button>Отправить</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginFormRedux = reduxForm({\r\n    form: 'simple' // a unique identifier for this form\r\n})(FormLogin)\r\nconst Loginpage = (props)=>{\r\nconst onSubmit=(formdata)=>{\r\n    console.log(formdata)\r\n        props.LoginThunk(formdata.email,formdata.password,formdata.rememberme)\r\n}\r\nif (props.isAuth)\r\n\r\n    return <Navigate to={'/profile'} />\r\n\r\n    return <div>\r\n        <LoginFormRedux onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nlet mapStateToPros= (state)=>{\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToPros, {LoginThunk})(Loginpage)"]},"metadata":{},"sourceType":"module"}