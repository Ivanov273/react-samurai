{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nimport { ObjectHelpinUsers } from \"../utils/Object-helpers\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SETTOTALCOUNT = 'SETTOTALCOUNT';\nconst SETPAGE = 'SETPAGE';\nconst TOGLE = 'TOGLE';\nconst TOGLE_PROGRESS = 'TOGLE_PROGRESS';\nlet initstate = {\n  users: [],\n  TotalCount: 50,\n  PageSize: 10,\n  currentPage: 1,\n  isfetching: true,\n  isfetchingprogress: []\n};\n\nconst reducerUsers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: ObjectHelpinUsers(state.users, action.userid, 'id', {\n          followed: true\n        })\n        /* users: state.users.map(u => {\r\n             if (u.id === action.userid) {\r\n                 return {...u, followed: true}\r\n             }\r\n             return u\r\n         })\r\n           */\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: ObjectHelpinUsers(state.users, action.userid, 'id', {\n          followed: false\n        })\n      };\n\n    case SETUSERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SETTOTALCOUNT:\n      return { ...state,\n        totalCount: [...action.totalCount]\n      };\n\n    case SETPAGE:\n      return { ...state,\n        currentPage: action.page\n      };\n\n    case TOGLE:\n      return { ...state,\n        isfetching: action.fetching\n      };\n\n    case TOGLE_PROGRESS:\n      return { ...state,\n        isfetchingprogress: action.isfetching ? [...state.isfetchingprogress, action.id] : state.isfetchingprogress.filter(id => id != action.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const OnFollow = userid => ({\n  type: FOLLOW,\n  userid\n});\n_c = OnFollow;\nexport const UnFollow = userid => ({\n  type: UNFOLLOW,\n  userid\n});\n_c2 = UnFollow;\nexport const SetUsers = users => ({\n  type: SETUSERS,\n  users\n});\n_c3 = SetUsers;\nexport const SetTotalCount = totalCount => ({\n  type: SETTOTALCOUNT,\n  totalCount\n});\n_c4 = SetTotalCount;\nexport const SetPage = page => ({\n  type: SETPAGE,\n  page\n});\n_c5 = SetPage;\nexport const Togle = fetching => ({\n  type: TOGLE,\n  fetching\n});\n_c6 = Togle;\nexport const TogleProgressFetching = (isfetching, id) => ({\n  type: TOGLE_PROGRESS,\n  isfetching,\n  id\n});\n_c7 = TogleProgressFetching;\nexport const getUsersThunkCreator = (currentPage, pagesize) => async dispatch => {\n  dispatch(Togle(true));\n  let data = await usersAPI.getUsersApi(currentPage, pagesize);\n  dispatch(SetUsers(data.items));\n  dispatch(SetTotalCount(data.totalCount));\n  console.log(data.totalCount);\n  dispatch(SetPage(currentPage));\n  dispatch(Togle(false));\n};\n\nconst FollowUnfollow = async (id, dispatch, methodAPI, ActionCreator) => {\n  dispatch(TogleProgressFetching(true, id));\n  let response = await methodAPI;\n\n  if (response.data.resultCode == 0) {\n    dispatch(ActionCreator(id));\n  }\n\n  dispatch(TogleProgressFetching(false, id));\n};\n\n_c8 = FollowUnfollow;\nexport const followUsersThunkCreator = id => async dispatch => {\n  FollowUnfollow(id, dispatch, usersAPI.getunFollowUsersApi(id), UnFollow);\n};\nexport const unfollowUsersThunkCreator = id => {\n  return async dispatch => {\n    FollowUnfollow(id, dispatch, usersAPI.getFollowUsersApi(id), OnFollow);\n  };\n};\nexport default reducerUsers;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"OnFollow\");\n$RefreshReg$(_c2, \"UnFollow\");\n$RefreshReg$(_c3, \"SetUsers\");\n$RefreshReg$(_c4, \"SetTotalCount\");\n$RefreshReg$(_c5, \"SetPage\");\n$RefreshReg$(_c6, \"Togle\");\n$RefreshReg$(_c7, \"TogleProgressFetching\");\n$RefreshReg$(_c8, \"FollowUnfollow\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-Users.js"],"names":["usersAPI","ObjectHelpinUsers","FOLLOW","UNFOLLOW","SETUSERS","SETTOTALCOUNT","SETPAGE","TOGLE","TOGLE_PROGRESS","initstate","users","TotalCount","PageSize","currentPage","isfetching","isfetchingprogress","reducerUsers","state","action","type","userid","followed","totalCount","page","fetching","id","filter","OnFollow","UnFollow","SetUsers","SetTotalCount","SetPage","Togle","TogleProgressFetching","getUsersThunkCreator","pagesize","dispatch","data","getUsersApi","items","console","log","FollowUnfollow","methodAPI","ActionCreator","response","resultCode","followUsersThunkCreator","getunFollowUsersApi","unfollowUsersThunkCreator","getFollowUsersApi"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {ObjectHelpinUsers} from \"../utils/Object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SETUSERS = 'SETUSERS'\r\nconst SETTOTALCOUNT = 'SETTOTALCOUNT'\r\nconst SETPAGE = 'SETPAGE'\r\nconst TOGLE = 'TOGLE'\r\nconst TOGLE_PROGRESS = 'TOGLE_PROGRESS'\r\n\r\nlet initstate = {\r\n    users: [],\r\n    TotalCount: 50,\r\n    PageSize: 10,\r\n    currentPage: 1,\r\n    isfetching: true,\r\n    isfetchingprogress: []\r\n}\r\n\r\nconst reducerUsers = (state = initstate, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: ObjectHelpinUsers(state.users,action.userid,'id', {followed: true})\r\n               /* users: state.users.map(u => {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n\r\n                */\r\n            }\r\n\r\n\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: ObjectHelpinUsers(state.users,action.userid,'id', {followed: false})\r\n\r\n            }\r\n        case SETUSERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n            case SETTOTALCOUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: [...action.totalCount]\r\n            }\r\n        case SETPAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case TOGLE:\r\n            return {\r\n                ...state,\r\n                isfetching: action.fetching\r\n            }\r\n        case TOGLE_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isfetchingprogress: action.isfetching ?\r\n                    [...state.isfetchingprogress, action.id]\r\n                    : state.isfetchingprogress.filter(id => id != action.id)\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const OnFollow = (userid) => ({type: FOLLOW, userid})\r\nexport const UnFollow = (userid) => ({type: UNFOLLOW, userid})\r\nexport const SetUsers = (users) => ({type: SETUSERS, users})\r\nexport const SetTotalCount = (totalCount) => ({type: SETTOTALCOUNT, totalCount})\r\nexport const SetPage = (page) => ({type: SETPAGE, page})\r\nexport const Togle = (fetching) => ({type: TOGLE, fetching})\r\nexport const TogleProgressFetching = (isfetching, id) => ({type: TOGLE_PROGRESS, isfetching, id})\r\n\r\nexport const getUsersThunkCreator = (currentPage, pagesize) => async (dispatch) => {\r\n    dispatch(Togle(true))\r\n    let data = await usersAPI.getUsersApi(currentPage, pagesize)\r\n    dispatch(SetUsers(data.items))\r\n    dispatch(SetTotalCount(data.totalCount))\r\n    console.log(data.totalCount)\r\n    dispatch(SetPage(currentPage))\r\n    dispatch(Togle(false))\r\n}\r\nconst FollowUnfollow = async (id,dispatch,methodAPI,ActionCreator)=>{\r\n    dispatch(TogleProgressFetching(true, id))\r\n    let response = await methodAPI\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(ActionCreator(id))\r\n    }\r\n    dispatch(TogleProgressFetching(false, id))\r\n}\r\nexport const followUsersThunkCreator = (id) => async (dispatch) => {\r\n    FollowUnfollow(id,dispatch,usersAPI.getunFollowUsersApi(id),UnFollow)\r\n}\r\nexport const unfollowUsersThunkCreator = (id) => {\r\n    return async (dispatch) => {\r\n             FollowUnfollow(id,dispatch,usersAPI.getFollowUsersApi(id),OnFollow)\r\n    }\r\n}\r\nexport default reducerUsers"]},"metadata":{},"sourceType":"module"}