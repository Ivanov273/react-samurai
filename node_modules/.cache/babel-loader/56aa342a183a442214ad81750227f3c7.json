{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': '86c79010-dccf-4af0-abdb-c44354c00af2'\n  }\n});\nexport const usersAPI = {\n  getUsersApi() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pagesize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`users?page=${currentPage}&count=${pagesize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getunFollowUsersApi() {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return instance.delete(`follow/${id}`);\n  },\n\n  getFollowUsersApi() {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return instance.post(`follow/${id}`);\n  },\n\n  getProfile() {\n    let userid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    return ProfileAPI.getProfile(userid);\n  },\n\n  apiAuth() {\n    return LoginAPI.apiAuth();\n  }\n\n};\nexport const ProfileAPI = {\n  getProfile() {\n    let userid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    return instance.get(`profile/${userid}`);\n  },\n\n  getStatus(userid) {\n    return instance.get(`profile/status/` + userid);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status/`, {\n      status: status\n    });\n  }\n\n};\nexport const LoginAPI = {\n  authorize(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    console.log(email, password, rememberMe);\n    return instance.post('auth/login', {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  deleteauthorize(login, password, rememberMe) {\n    return instance.delete('auth/login');\n  },\n\n  apiAuth() {\n    return instance.get(`auth/me`);\n  }\n\n};\n/*axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\r\n            withCredentials: true\r\n        })*/","map":{"version":3,"sources":["C:/React/Project/react2.0/src/api/api.js"],"names":["axios","instance","create","baseURL","withCredentials","headers","usersAPI","getUsersApi","currentPage","pagesize","get","then","response","data","getunFollowUsersApi","id","delete","getFollowUsersApi","post","getProfile","userid","ProfileAPI","apiAuth","LoginAPI","getStatus","updateStatus","status","put","authorize","email","password","rememberMe","console","log","deleteauthorize","login"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,+CADiB;AAE1BC,EAAAA,eAAe,EAAE,IAFS;AAGvBC,EAAAA,OAAO,EAAE;AACR,eAAY;AADJ;AAHc,CAAb,CAAjB;AAQC,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,WAAW,GAAgC;AAAA,QAA9BC,WAA8B,uEAAjB,CAAiB;AAAA,QAAfC,QAAe,uEAAL,EAAK;AACvC,WAAWR,QAAQ,CAACS,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EAA4DE,IAA5D,CAAiEC,QAAQ,IAAE;AAClF,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFU,CAAX;AAIH,GANmB;;AAOpBC,EAAAA,mBAAmB,GAAU;AAAA,QAARC,EAAQ,uEAAJ,CAAI;AAEzB,WAAWd,QAAQ,CAACe,MAAT,CAAiB,UAASD,EAAG,EAA7B,CAAX;AAEH,GAXmB;;AAYpBE,EAAAA,iBAAiB,GAAU;AAAA,QAARF,EAAQ,uEAAJ,CAAI;AAEvB,WAAWd,QAAQ,CAACiB,IAAT,CAAe,UAASH,EAAG,EAA3B,CAAX;AAEH,GAhBmB;;AAiBpBI,EAAAA,UAAU,GAAa;AAAA,QAAXC,MAAW,uEAAJ,CAAI;AACnB,WAAWC,UAAU,CAACF,UAAX,CAAsBC,MAAtB,CAAX;AAEH,GApBmB;;AAqBpBE,EAAAA,OAAO,GAAK;AACR,WAAUC,QAAQ,CAACD,OAAT,EAAV;AAEH;;AAxBmB,CAAjB;AA0BR,OAAO,MAAMD,UAAU,GAAG;AACrBF,EAAAA,UAAU,GAAa;AAAA,QAAXC,MAAW,uEAAJ,CAAI;AACpB,WAAWnB,QAAQ,CAACS,GAAT,CAAc,WAAUU,MAAO,EAA/B,CAAX;AAEH,GAJqB;;AAKtBI,EAAAA,SAAS,CAACJ,MAAD,EAAQ;AACZ,WAAOnB,QAAQ,CAACS,GAAT,CAAc,iBAAD,GAAkBU,MAA/B,CAAP;AACJ,GAPqB;;AAQtBK,EAAAA,YAAY,CAACC,MAAD,EAAQ;AACf,WAAOzB,QAAQ,CAAC0B,GAAT,CAAc,iBAAd,EAA+B;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAA/B,CAAP;AACJ;;AAVqB,CAAnB;AAYP,OAAO,MAAMH,QAAQ,GAAG;AACpBK,EAAAA,SAAS,CAACC,KAAD,EAAOC,QAAP,EAAmC;AAAA,QAAnBC,UAAmB,uEAAN,KAAM;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAkBC,QAAlB,EAA2BC,UAA3B;AACA,WAAO9B,QAAQ,CAACiB,IAAT,CAAc,YAAd,EAA2B;AAACW,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBC,MAAAA;AAAhB,KAA3B,CAAP;AACH,GAJmB;;AAKpBG,EAAAA,eAAe,CAACC,KAAD,EAAOL,QAAP,EAAgBC,UAAhB,EAA2B;AACtC,WAAO9B,QAAQ,CAACe,MAAT,CAAgB,YAAhB,CAAP;AACH,GAPmB;;AAQpBM,EAAAA,OAAO,GAAK;AACR,WAAWrB,QAAQ,CAACS,GAAT,CAAc,SAAd,CAAX;AAEH;;AAXmB,CAAjB;AAaP;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n       headers: {\r\n        'API-KEY' : '86c79010-dccf-4af0-abdb-c44354c00af2'\r\n    }\r\n})\r\n\r\n export const usersAPI = {\r\n     getUsersApi (currentPage= 1,pagesize= 10)  {\r\n         return     instance.get(`users?page=${currentPage}&count=${pagesize}`).then(response=>{\r\n             return response.data\r\n         })\r\n\r\n     } ,\r\n     getunFollowUsersApi (id= 1)  {\r\n\r\n         return     instance.delete(`follow/${id}`)\r\n\r\n     },\r\n     getFollowUsersApi (id= 1)  {\r\n\r\n         return     instance.post(`follow/${id}`)\r\n\r\n     },\r\n     getProfile (userid=5)  {\r\n         return     ProfileAPI.getProfile(userid)\r\n\r\n     },\r\n     apiAuth ()  {\r\n         return    LoginAPI.apiAuth()\r\n\r\n     }\r\n }\r\nexport const ProfileAPI = {\r\n     getProfile (userid=5)  {\r\n        return     instance.get(`profile/${userid}`)\r\n\r\n    },\r\n    getStatus(userid){\r\n         return instance.get(`profile/status/`+userid)\r\n    },\r\n    updateStatus(status){\r\n         return instance.put(`profile/status/`,{status: status})\r\n    }\r\n}\r\nexport const LoginAPI = {\r\n    authorize(email,password,rememberMe = false){\r\n        console.log(email,password,rememberMe)\r\n        return instance.post('auth/login',{email,password,rememberMe})\r\n    } ,\r\n    deleteauthorize(login,password,rememberMe){\r\n        return instance.delete('auth/login')\r\n    },\r\n    apiAuth ()  {\r\n        return     instance.get(`auth/me`)\r\n\r\n    }\r\n}\r\n/*axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\r\n            withCredentials: true\r\n        })*/"]},"metadata":{},"sourceType":"module"}