{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Readux/redux-store';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet factoria = d => {\n  if (d > 1) return d * factoria(d - 1);\n  return 1;\n};\n\nalert(factoria(5)); //alert('cascasc')\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 9\n}, this), document.getElementById('root'));\nsetInterval(() => {\n  store.dispatch({\n    type: \"FAKE\"\n  });\n}, 1000); //let state = store.getState()\n//store.setState(render)\n//store.setState(rerenderState)\n//store.getState()\n//console.log(store)\n//console.log(store.subscribe(rerenderState))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["C:/React/Project/react2.0/src/index.js"],"names":["React","ReactDOM","App","store","BrowserRouter","Provider","factoria","d","alert","render","document","getElementById","setInterval","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;;AACA,IAAIC,QAAQ,GAAEC,CAAD,IAAK;AACd,MAAGA,CAAC,GAAC,CAAL,EACA,OAAOA,CAAC,GAACD,QAAQ,CAACC,CAAC,GAAC,CAAH,CAAjB;AACA,SAAO,CAAP;AACH,CAJD;;AAKAC,KAAK,CAACF,QAAQ,CAAC,CAAD,CAAT,CAAL,C,CACA;;AACIL,QAAQ,CAACQ,MAAT,eACI,QAAC,aAAD;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAMIO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AASJC,WAAW,CAAC,MAAI;AACZT,EAAAA,KAAK,CAACU,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAf;AACH,CAFU,EAGP,IAHO,CAAX,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './Readux/redux-store'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nlet factoria=(d)=>{\r\n    if(d>1)\r\n    return d*factoria(d-1)\r\n    return 1\r\n}\r\nalert(factoria(5))\r\n//alert('cascasc')\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\nsetInterval(()=>{\r\n    store.dispatch({type: \"FAKE\"})\r\n},\r\n    1000)\r\n\r\n\r\n//let state = store.getState()\r\n//store.setState(render)\r\n//store.setState(rerenderState)\r\n//store.getState()\r\n//console.log(store)\r\n//console.log(store.subscribe(rerenderState))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"]},"metadata":{},"sourceType":"module"}