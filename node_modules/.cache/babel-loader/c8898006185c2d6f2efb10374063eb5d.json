{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { AuthThunk } from \"./Reducer-Auth\";\nconst SET_INITIALIZE = 'SET_INITIALIZE';\nlet initstate = {\n  initialize: false\n};\n\nconst reducerApp = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_INITIALIZE:\n      return { ...state,\n        initialize: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const SetInitializeApp = () => ({\n  type: SET_INITIALIZE\n});\n_c = SetInitializeApp;\nexport const InitializeThunk = dispatch => {\n  let resultdispatch = dispatch(AuthThunk);\n  debugger;\n  dispatch(SetInitializeApp);\n};\n_c2 = InitializeThunk;\nexport default reducerApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetInitializeApp\");\n$RefreshReg$(_c2, \"InitializeThunk\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-App.js"],"names":["usersAPI","stopSubmit","AuthThunk","SET_INITIALIZE","initstate","initialize","reducerApp","state","action","type","SetInitializeApp","InitializeThunk","dispatch","resultdispatch"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,YAAvB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,UAAU,EAAE;AADA,CAAhB;;AAGA,MAAMC,UAAU,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,cAAL;AACG,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKH;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAYA,OAAO,MAAMG,gBAAgB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAAzB;KAAMO,gB;AACb,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAa;AACxC,MAAIC,cAAc,GAAGD,QAAQ,CAACV,SAAD,CAA7B;AACA;AACAU,EAAAA,QAAQ,CAACF,gBAAD,CAAR;AACH,CAJM;MAAMC,e;AAMb,eAAeL,UAAf","sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AuthThunk} from \"./Reducer-Auth\";\r\n\r\nconst SET_INITIALIZE = 'SET_INITIALIZE'\r\n\r\nlet initstate = {\r\n    initialize: false\r\n}\r\nconst reducerApp = (state = initstate, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZE:\r\n           return {\r\n               ...state,\r\n               initialize: true\r\n\r\n           }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const SetInitializeApp = () => ({type: SET_INITIALIZE})\r\nexport const InitializeThunk = (dispatch)=> {\r\n    let resultdispatch = dispatch(AuthThunk)\r\n    debugger\r\n    dispatch(SetInitializeApp)\r\n}\r\n\r\nexport default reducerApp"]},"metadata":{},"sourceType":"module"}