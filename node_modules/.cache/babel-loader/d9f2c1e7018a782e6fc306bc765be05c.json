{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Users\\\\Users-Container.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { OnFollow, ThunkCreatorDeleteUsers, ThunkCreatorFollowUsers, ThunkCreatorGetUsers, TogleFollow, UnFollow } from '../../Readux/Reducer-Users';\nimport Users from './Users';\nimport Preloader from \"../Common/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChange = p => {\n      this.props.ThunkCreatorGetUsers(p, this.props.pagesize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.ThunkCreatorGetUsers(this.props.currentPage, this.props.pagesize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isfetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        onPageChange: this.onPageChange,\n        isAuth: this.props.isAuth,\n        Users: this.props.Users,\n        TotalCount: this.props.TotalCount,\n        pagesize: this.props.pagesize,\n        currentPage: this.props.currentPage,\n        togglefollow: this.props.togglefollow,\n        ThunkCreatorDeleteUsers: this.props.ThunkCreatorDeleteUsers,\n        ThunkCreatorFollowUsers: this.props.ThunkCreatorFollowUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToUsers = state => {\n  return {\n    Users: state.usersPage.users,\n    TotalCount: state.usersPage.TotalCount,\n    pagesize: state.usersPage.PageSize,\n    currentPage: state.usersPage.currentPage,\n    isfetching: state.usersPage.isfetching,\n    togglefollow: state.usersPage.togglefollow,\n    isAuth: state.Auth.isAuth\n  };\n};\n\nexport default connect(mapStateToUsers, {\n  OnFollow,\n  UnFollow,\n  TogleFollow,\n  ThunkCreatorGetUsers,\n  ThunkCreatorDeleteUsers,\n  ThunkCreatorFollowUsers\n})(UserContainer);","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Users/Users-Container.jsx"],"names":["React","connect","OnFollow","ThunkCreatorDeleteUsers","ThunkCreatorFollowUsers","ThunkCreatorGetUsers","TogleFollow","UnFollow","Users","Preloader","UserContainer","Component","onPageChange","p","props","pagesize","componentDidMount","currentPage","render","isfetching","isAuth","TotalCount","togglefollow","mapStateToUsers","state","usersPage","users","PageSize","Auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,QADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,EAIIC,oBAJJ,EAKIC,WALJ,EAMIC,QANJ,QAOO,4BAPP;AAQA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;;AAEA,MAAMC,aAAN,SAA4BV,KAAK,CAACW,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAKxCC,YALwC,GAKxBC,CAAD,IAAO;AAClB,WAAKC,KAAL,CAAWT,oBAAX,CAAgCQ,CAAhC,EAAmC,KAAKC,KAAL,CAAWC,QAA9C;AAEH,KARuC;AAAA;;AACxCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWT,oBAAX,CAAgC,KAAKS,KAAL,CAAWG,WAA3C,EAAwD,KAAKH,KAAL,CAAWC,QAAnE;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBAEC,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IAFxC,eAKH,QAAC,KAAD;AAAO,QAAA,YAAY,EAAE,KAAKP,YAA1B;AACO,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWM,MAD1B;AAEO,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWN,KAFzB;AAGO,QAAA,UAAU,EAAE,KAAKM,KAAL,CAAWO,UAH9B;AAIO,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QAJ5B;AAKO,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAL/B;AAMO,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWQ,YANhC;AAOO,QAAA,uBAAuB,EAAE,KAAKR,KAAL,CAAWX,uBAP3C;AAQO,QAAA,uBAAuB,EAAE,KAAKW,KAAL,CAAWV;AAR3C;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAgBH;;AA1BuC;;AA6B5C,IAAImB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHhB,IAAAA,KAAK,EAAEgB,KAAK,CAACC,SAAN,CAAgBC,KADpB;AAEHL,IAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,UAFzB;AAGHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBE,QAHvB;AAIHV,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,YAAY,EAAEE,KAAK,CAACC,SAAN,CAAgBH,YAN3B;AAOHF,IAAAA,MAAM,EAAEI,KAAK,CAACI,IAAN,CAAWR;AAPhB,GAAP;AASH,CAVD;;AAaA,eAAenB,OAAO,CAACsB,eAAD,EAAkB;AACpCrB,EAAAA,QADoC;AAEpCK,EAAAA,QAFoC;AAGpCD,EAAAA,WAHoC;AAIpCD,EAAAA,oBAJoC;AAKpCF,EAAAA,uBALoC;AAMpCC,EAAAA;AANoC,CAAlB,CAAP,CAOZM,aAPY,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    OnFollow,\r\n    ThunkCreatorDeleteUsers,\r\n    ThunkCreatorFollowUsers,\r\n    ThunkCreatorGetUsers,\r\n    TogleFollow,\r\n    UnFollow\r\n} from '../../Readux/Reducer-Users';\r\nimport Users from './Users';\r\nimport Preloader from \"../Common/Preloader\";\r\n\r\nclass UserContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.ThunkCreatorGetUsers(this.props.currentPage, this.props.pagesize)\r\n    }\r\n\r\n    onPageChange = (p) => {\r\n        this.props.ThunkCreatorGetUsers(p, this.props.pagesize)\r\n\r\n    }\r\n    render() {\r\n        return <>\r\n            {\r\n                this.props.isfetching ? <Preloader/> : null\r\n\r\n            }\r\n            <Users onPageChange={this.onPageChange}\r\n                   isAuth={this.props.isAuth}\r\n                   Users={this.props.Users}\r\n                   TotalCount={this.props.TotalCount}\r\n                   pagesize={this.props.pagesize}\r\n                   currentPage={this.props.currentPage}\r\n                   togglefollow={this.props.togglefollow}\r\n                   ThunkCreatorDeleteUsers={this.props.ThunkCreatorDeleteUsers}\r\n                   ThunkCreatorFollowUsers={this.props.ThunkCreatorFollowUsers}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToUsers = (state) => {\r\n    return {\r\n        Users: state.usersPage.users,\r\n        TotalCount: state.usersPage.TotalCount,\r\n        pagesize: state.usersPage.PageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isfetching: state.usersPage.isfetching,\r\n        togglefollow: state.usersPage.togglefollow,\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToUsers, {\r\n    OnFollow,\r\n    UnFollow,\r\n    TogleFollow,\r\n    ThunkCreatorGetUsers,\r\n    ThunkCreatorDeleteUsers,\r\n    ThunkCreatorFollowUsers\r\n})(UserContainer)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}