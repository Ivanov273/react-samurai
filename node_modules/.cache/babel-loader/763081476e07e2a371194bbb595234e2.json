{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\utils\\\\validators.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const required = value => value || typeof value === 'number' ? undefined : 'Required';\n\nconst maxLength = max => value => value && value.length > max ? `Должно быть не больше ${max} букв` : undefined;\n\nexport const maxLength15 = maxLength(15);\nexport const minLength = min => value => value && value.length < min ? `Должно быть не менее ${min} букв` : undefined;\nexport const minLength2 = minLength(2);\nexport const renderField = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        placeholder: label,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: warning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/React/Project/react2.0/src/utils/validators.js"],"names":["React","required","value","undefined","maxLength","max","length","maxLength15","minLength","min","minLength2","renderField","input","label","type","meta","touched","error","warning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAKA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GAAqCC,SAArC,GAAiD,UAA5E;;AACP,MAAMC,SAAS,GAAGC,GAAG,IAAIH,KAAK,IAC1BA,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAeD,GAAxB,GAA+B,yBAAwBA,GAAI,OAA3D,GAAoEF,SADxE;;AAEA,OAAO,MAAMI,WAAW,GAAGH,SAAS,CAAC,EAAD,CAA7B;AACP,OAAO,MAAMI,SAAS,GAAGC,GAAG,IAAIP,KAAK,IACjCA,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAeG,GAAxB,GAA+B,wBAAuBA,GAAI,OAA1D,GAAmEN,SADhE;AAEP,OAAO,MAAMO,UAAU,GAAGF,SAAS,CAAC,CAAD,CAA5B;AAIP,OAAO,MAAMG,WAAW,GAAG;AAAA,MAAC;AACHC,IAAAA,KADG;AAEHC,IAAAA,KAFG;AAGHC,IAAAA,IAHG;AAIHC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AAJH,GAAD;AAAA,sBAMvB;AAAA,4BACI;AAAA,gBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI,sBAAWD,KAAX;AAAkB,QAAA,WAAW,EAAEC,KAA/B;AAAsC,QAAA,IAAI,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,OAAO,KACFC,KAAK,iBAAI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAAV,IACIC,OAAO,iBAAI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAFZ,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANuB;AAAA,CAApB","sourcesContent":["import React from \"react\";\r\n\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Required')\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Должно быть не больше ${max} букв` : undefined\r\nexport const maxLength15 = maxLength(15)\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Должно быть не менее ${min} букв` : undefined\r\nexport const minLength2 = minLength(2)\r\n\r\n\r\n\r\nexport const renderField = ({\r\n                         input,\r\n                         label,\r\n                         type,\r\n                         meta: { touched, error, warning }\r\n                     }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type} />\r\n            {touched &&\r\n                ((error && <span>{error}</span>) ||\r\n                    (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)"]},"metadata":{},"sourceType":"module"}