{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Readux/redux-store';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction factorial(n) {\n  return n * factorial(n - 1);\n}\n\nalert(factorial(5)); // 120\n//alert('cascasc')\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 9\n}, this), document.getElementById('root'));\nsetInterval(() => {\n  store.dispatch({\n    type: \"FAKE\"\n  });\n}, 1000); //let state = store.getState()\n//store.setState(render)\n//store.setState(rerenderState)\n//store.getState()\n//console.log(store)\n//console.log(store.subscribe(rerenderState))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["C:/React/Project/react2.0/src/index.js"],"names":["React","ReactDOM","App","store","BrowserRouter","Provider","factorial","n","alert","render","document","getElementById","setInterval","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,aAAvB;;;AACA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,SAAQA,CAAC,GAAGD,SAAS,CAACC,CAAC,GAAG,CAAL,CAArB;AACH;;AAEDC,KAAK,CAAEF,SAAS,CAAC,CAAD,CAAX,CAAL,C,CAAuB;AACvB;;AACIL,QAAQ,CAACQ,MAAT,eACI,QAAC,aAAD;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAMIO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AASJC,WAAW,CAAC,MAAI;AACZT,EAAAA,KAAK,CAACU,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAf;AACH,CAFU,EAGP,IAHO,CAAX,C,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './Readux/redux-store'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nfunction factorial(n) {\r\n    return  n * factorial(n - 1) ;\r\n}\r\n\r\nalert( factorial(5) ); // 120\r\n//alert('cascasc')\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\nsetInterval(()=>{\r\n    store.dispatch({type: \"FAKE\"})\r\n},\r\n    1000)\r\n\r\n\r\n//let state = store.getState()\r\n//store.setState(render)\r\n//store.setState(rerenderState)\r\n//store.getState()\r\n//console.log(store)\r\n//console.log(store.subscribe(rerenderState))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"]},"metadata":{},"sourceType":"module"}