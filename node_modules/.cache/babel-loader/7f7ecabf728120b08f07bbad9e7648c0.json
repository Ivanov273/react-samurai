{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from 'react';\nimport { ActionCreatorAddDialog, ActionCreatorUpdateDialogText } from \"../../Readux/Reducer-Dialog\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState();\n\n      let OnChandeDialog = text => {\n        store.dispatch(ActionCreatorUpdateDialogText(text));\n      };\n\n      let onAddDialog = () => {\n        store.dispatch(ActionCreatorAddDialog());\n      };\n\n      return /*#__PURE__*/_jsxDEV(Dialogs, {\n        OnChandeDialog: OnChandeDialog,\n        onaddDialogs: onAddDialog,\n        newDialog: state.DialogPage.newDialog,\n        DialogData: state.DialogPage.DialogData,\n        newText: state.DialogPage.newDialog,\n        TextData: state.DialogPage.TextData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\n\nlet mapDialogToState = state => {\n  return {\n    newDialog: state.DialogPage.newDialog,\n    DialogData: state.DialogPage.DialogData,\n    newText: state.DialogPage.newDialog,\n    TextData: state.DialogPage.TextData\n  };\n};\n\nlet mapDispatch = dispatch => {\n  return {\n    OnChandeDialog: text => {\n      dispatch(ActionCreatorUpdateDialogText(text));\n    },\n    onAddDialog: () => {\n      dispatch(ActionCreatorAddDialog());\n    }\n  };\n};\n\nlet superDialogs = connect(mapDialogToState, mapDispatch)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Dialogs/DialogsContainer.jsx"],"names":["React","ActionCreatorAddDialog","ActionCreatorUpdateDialogText","Dialogs","StoreContext","connect","DialogsContainer","props","store","state","getState","OnChandeDialog","text","dispatch","onAddDialog","DialogPage","newDialog","DialogData","TextData","mapDialogToState","newText","mapDispatch","superDialogs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,sBAAR,EAAgCC,6BAAhC,QAAoE,6BAApE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,sBACI,QAAC,YAAD,CAAc,QAAd;AAAA,cACKC,KAAD,IAAW;AACP,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;AACA,UAAIC,cAAc,GAAIC,IAAD,IAAU;AAC3BJ,QAAAA,KAAK,CAACK,QAAN,CAAeX,6BAA6B,CAACU,IAAD,CAA5C;AACH,OAFD;;AAGA,UAAIE,WAAW,GAAG,MAAM;AACpBN,QAAAA,KAAK,CAACK,QAAN,CAAeZ,sBAAsB,EAArC;AACH,OAFD;;AAGA,0BAAO,QAAC,OAAD;AAAS,QAAA,cAAc,EAAEU,cAAzB;AACS,QAAA,YAAY,EAAEG,WADvB;AAES,QAAA,SAAS,EAAEL,KAAK,CAACM,UAAN,CAAiBC,SAFrC;AAGS,QAAA,UAAU,EAAEP,KAAK,CAACM,UAAN,CAAiBE,UAHtC;AAIS,QAAA,OAAO,EAAER,KAAK,CAACM,UAAN,CAAiBC,SAJnC;AAKS,QAAA,QAAQ,EAAEP,KAAK,CAACM,UAAN,CAAiBG;AALpC;AAAA;AAAA;AAAA;AAAA,cAAP;AAMH;AAfL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtBD;;KAAMZ,gB;;AAuBN,IAAIa,gBAAgB,GAAIV,KAAD,IAAS;AAC5B,SAAO;AACHO,IAAAA,SAAS,EAAEP,KAAK,CAACM,UAAN,CAAiBC,SADzB;AAEHC,IAAAA,UAAU,EAAER,KAAK,CAACM,UAAN,CAAiBE,UAF1B;AAGHG,IAAAA,OAAO,EAAEX,KAAK,CAACM,UAAN,CAAiBC,SAHvB;AAIHE,IAAAA,QAAQ,EAAET,KAAK,CAACM,UAAN,CAAiBG;AAJxB,GAAP;AAMH,CAPD;;AAQA,IAAIG,WAAW,GAAIR,QAAD,IAAY;AAC1B,SAAO;AACPF,IAAAA,cAAc,EAAGC,IAAD,IAAQ;AAACC,MAAAA,QAAQ,CAACX,6BAA6B,CAACU,IAAD,CAA9B,CAAR;AAA8C,KADhE;AAEHE,IAAAA,WAAW,EAAE,MAAI;AAACD,MAAAA,QAAQ,CAACZ,sBAAsB,EAAvB,CAAR;AAAmC;AAFlD,GAAP;AAIH,CALD;;AAMA,IAAIqB,YAAY,GAAGjB,OAAO,CAACc,gBAAD,EAAkBE,WAAlB,CAAP,CAAsClB,OAAtC,CAAnB;AACA,eAAeG,gBAAf","sourcesContent":["import React from 'react'\r\nimport {ActionCreatorAddDialog, ActionCreatorUpdateDialogText} from \"../../Readux/Reducer-Dialog\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>{\r\n            (store) => {\r\n                let state = store.getState()\r\n                let OnChandeDialog = (text) => {\r\n                    store.dispatch(ActionCreatorUpdateDialogText(text))\r\n                }\r\n                let onAddDialog = () => {\r\n                    store.dispatch(ActionCreatorAddDialog())\r\n                }\r\n                return <Dialogs OnChandeDialog={OnChandeDialog}\r\n                                onaddDialogs={onAddDialog}\r\n                                newDialog={state.DialogPage.newDialog}\r\n                                DialogData={state.DialogPage.DialogData}\r\n                                newText={state.DialogPage.newDialog}\r\n                                TextData={state.DialogPage.TextData}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\nlet mapDialogToState = (state)=>{\r\n    return {\r\n        newDialog: state.DialogPage.newDialog,\r\n        DialogData: state.DialogPage.DialogData,\r\n        newText: state.DialogPage.newDialog,\r\n        TextData: state.DialogPage.TextData\r\n    }\r\n}\r\nlet mapDispatch = (dispatch)=>{\r\n    return {\r\n    OnChandeDialog: (text)=>{dispatch(ActionCreatorUpdateDialogText(text))},\r\n        onAddDialog: ()=>{dispatch(ActionCreatorAddDialog())}\r\n}\r\n}\r\nlet superDialogs = connect(mapDialogToState,mapDispatch)(Dialogs)\r\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}