{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\HOC\\\\AuthHOC.js\";\nimport React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  Auth: state.Auth.isAuth\n});\n\nexport const WithAuthContainer = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      debugger;\n      if (this.props.Auth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 40\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let newRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return newRedirectComponent;\n};\n/*\r\n  let AuthContainer = (props)=>{\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    return AuthContainer\r\n*/\n\n/*\r\nclass RedirectComponent extends React.Component {\r\n    render(){\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nreturn RedirectComponent\r\n\r\n */\n\n_c = WithAuthContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithAuthContainer\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/HOC/AuthHOC.js"],"names":["React","Component","Navigate","connect","mapStateToPropsForRedirect","state","Auth","isAuth","WithAuthContainer","RedirectComponent","render","props","newRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AACA,IAAIC,0BAA0B,GAAIC,KAAD,KAAU;AACvCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC;AADsB,CAAV,CAAjC;;AAGA,OAAO,MAAMC,iBAAiB,GAAIP,SAAD,IAAc;AAC3C,QAAMQ,iBAAN,SAAgCT,KAAK,CAACC,SAAtC,CAAgD;AAC5CS,IAAAA,MAAM,GAAE;AACJ;AACA,UAAG,KAAKC,KAAL,CAAWL,IAAd,EAAoB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACpB,0BAAO,QAAC,SAAD,OAAe,KAAKK;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAL2C;;AAQhD,MAAIC,oBAAoB,GAAGT,OAAO,CAACC,0BAAD,CAAP,CAAoCK,iBAApC,CAA3B;AACA,SAAOG,oBAAP;AACH,CAXM;AAeP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA/BaJ,iB","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state)=>({\r\n    Auth: state.Auth.isAuth\r\n})\r\nexport const WithAuthContainer = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            debugger\r\n            if(this.props.Auth) return <Navigate to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let newRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return newRedirectComponent\r\n}\r\n\r\n\r\n\r\n/*\r\n  let AuthContainer = (props)=>{\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n    return AuthContainer\r\n*/\r\n/*\r\nclass RedirectComponent extends React.Component {\r\n    render(){\r\n        if(!this.props.Auth) return <Navigate to={\"/login\"} />\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nreturn RedirectComponent\r\n\r\n */"]},"metadata":{},"sourceType":"module"}