{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Users\\\\Users-Container.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { OnFollow, UnFollow, SetUsers, SetPage, Togle } from '../../Readux/Reducer-Users';\nimport axios from 'axios';\nimport Users from './Users';\nimport Preloader from \"../Common/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.SetUserPage = p => {\n      this.props.Togle(true);\n      this.props.SetPage(p);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=10`).then(response => {\n        this.props.SetUsers(response.data.items);\n        this.props.Togle(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.Togle(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pagesize}`, {\n      withCredentials: true\n    }).then(response => {\n      this.props.SetUsers(response.data.items);\n      this.props.Togle(false);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isfetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        SetUserPage: this.SetUserPage,\n        Users: this.props.Users,\n        TotalCount: this.props.TotalCount,\n        pagesize: this.props.pagesize,\n        UnFollow: this.props.UnFollow,\n        OnFollow: this.props.OnFollow,\n        currentPage: this.props.currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToUsers = state => {\n  return {\n    Users: state.usersPage.users,\n    TotalCount: state.usersPage.TotalCount,\n    pagesize: state.usersPage.PageSize,\n    currentPage: state.usersPage.currentPage,\n    isfetching: state.usersPage.isfetching\n  };\n};\n\nexport default connect(mapStateToUsers, {\n  OnFollow,\n  UnFollow,\n  SetUsers,\n  SetPage,\n  Togle\n})(UserContainer);","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Users/Users-Container.jsx"],"names":["React","connect","OnFollow","UnFollow","SetUsers","SetPage","Togle","axios","Users","Preloader","UserContainer","Component","SetUserPage","p","props","get","then","response","data","items","componentDidMount","currentPage","pagesize","withCredentials","render","isfetching","TotalCount","mapStateToUsers","state","usersPage","users","PageSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,OAAtC,EAA+CC,KAA/C,QAA2D,4BAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;;AAEA,MAAMC,aAAN,SAA4BV,KAAK,CAACW,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAaxCC,WAbwC,GAazBC,CAAD,IAAO;AACjB,WAAKC,KAAL,CAAWR,KAAX,CAAiB,IAAjB;AACA,WAAKQ,KAAL,CAAWT,OAAX,CAAmBQ,CAAnB;AACAN,MAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0DF,CAAE,WAAvE,EAAmFG,IAAnF,CAAwFC,QAAQ,IAAI;AAChG,aAAKH,KAAL,CAAWV,QAAX,CAAoBa,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,aAAKL,KAAL,CAAWR,KAAX,CAAiB,KAAjB;AAEH,OAJD;AAKH,KArBuC;AAAA;;AAGxCc,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWR,KAAX,CAAiB,IAAjB;AACAC,IAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0D,KAAKD,KAAL,CAAWO,WAAY,UAAS,KAAKP,KAAL,CAAWQ,QAAS,EAAzH,EAA2H;AACvHC,MAAAA,eAAe,EAAE;AADsG,KAA3H,EAEGP,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKH,KAAL,CAAWV,QAAX,CAAoBa,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,WAAKL,KAAL,CAAWR,KAAX,CAAiB,KAAjB;AACH,KALD;AAMH;;AAYDkB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBAEC,KAAKV,KAAL,CAAWW,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IAFxC,eAKH,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKb,WAAzB;AACO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWN,KADzB;AAEO,QAAA,UAAU,EAAE,KAAKM,KAAL,CAAWY,UAF9B;AAGO,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWQ,QAH5B;AAIO,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWX,QAJ5B;AAKO,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWZ,QAL5B;AAMO,QAAA,WAAW,EAAE,KAAKY,KAAL,CAAWO;AAN/B;AAAA;AAAA;AAAA;AAAA,cALG;AAAA,oBAAP;AAaH;;AArCuC;;AAwC5C,IAAIM,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHpB,IAAAA,KAAK,EAAEoB,KAAK,CAACC,SAAN,CAAgBC,KADpB;AAEHJ,IAAAA,UAAU,EAAEE,KAAK,CAACC,SAAN,CAAgBH,UAFzB;AAGHJ,IAAAA,QAAQ,EAAEM,KAAK,CAACC,SAAN,CAAgBE,QAHvB;AAIHV,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHI,IAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AALzB,GAAP;AAOH,CARD;;AAWA,eAAexB,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAAlB,CAAP,CAAyEI,aAAzE,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {OnFollow, UnFollow, SetUsers, SetPage, Togle} from '../../Readux/Reducer-Users';\r\nimport axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from \"../Common/Preloader\";\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.Togle(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pagesize}`,{\r\n            withCredentials: true\r\n        }).then(response => {\r\n            this.props.SetUsers(response.data.items)\r\n            this.props.Togle(false)\r\n        })\r\n    }\r\n\r\n    SetUserPage = (p) => {\r\n        this.props.Togle(true)\r\n        this.props.SetPage(p)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=10`).then(response => {\r\n            this.props.SetUsers(response.data.items)\r\n            this.props.Togle(false)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {\r\n                this.props.isfetching ? <Preloader/> : null\r\n\r\n            }\r\n            <Users SetUserPage={this.SetUserPage}\r\n                   Users={this.props.Users}\r\n                   TotalCount={this.props.TotalCount}\r\n                   pagesize={this.props.pagesize}\r\n                   UnFollow={this.props.UnFollow}\r\n                   OnFollow={this.props.OnFollow}\r\n                   currentPage={this.props.currentPage}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToUsers = (state) => {\r\n    return {\r\n        Users: state.usersPage.users,\r\n        TotalCount: state.usersPage.TotalCount,\r\n        pagesize: state.usersPage.PageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isfetching: state.usersPage.isfetching\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToUsers, {OnFollow, UnFollow, SetUsers, SetPage, Togle})(UserContainer)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}