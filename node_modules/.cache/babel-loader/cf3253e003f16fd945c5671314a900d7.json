{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\Component\\\\Profile\\\\ProfileContainer.js\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { ProfileThunk, ProfileThunkStatus, UpdateProfileThunkStatus } from \"../../Readux/Reducer-Profile\";\nimport { useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { WithAuthContainer } from \"../../HOC/AuthHOC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withRouter = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    let factoria = num => {\n      if (num != 1) return;\n      if (num > 120) return;\n      num = num * (num - 1);\n    };\n\n    factoria(5);\n    const params = useParams();\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props,\n      params: params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  }, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n    return [useParams];\n  });\n};\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userid = this.props.params.userId;\n\n    if (!userid) {\n      userid = this.props.userid;\n    }\n\n    this.props.ProfileThunk(userid);\n    this.props.ProfileThunkStatus(userid);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile,\n        UpdateProfileThunkStatus: this.props.UpdateProfileThunkStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.ProfilePage.profile,\n    profilestatus: state.ProfilePage.profilestatus,\n    userid: state.Auth.userid,\n    isAuth: state.Auth.isAuth\n  };\n}; //const ProfileContainerwithRouter = withRouter(RedirectComponent)\n\n\nexport default compose(connect(mapStateToProps, {\n  ProfileThunk,\n  ProfileThunkStatus,\n  UpdateProfileThunkStatus\n}), WithAuthContainer, withRouter)(ProfileContainer);","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Profile/ProfileContainer.js"],"names":["React","Profile","connect","ProfileThunk","ProfileThunkStatus","UpdateProfileThunkStatus","useParams","compose","WithAuthContainer","withRouter","WrappedComponent","props","factoria","num","params","ProfileContainer","Component","componentDidMount","userid","userId","render","profile","mapStateToProps","state","ProfilePage","profilestatus","Auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,EAA0CC,wBAA1C,QAAyE,8BAAzE;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;;AAGA,MAAMC,UAAU,GAAGC,gBAAgB;AAAA;;AAAA,YAAIC,KAAK,IAAI;AAAA;;AAChD,QAAIC,QAAQ,GAAEC,GAAD,IAAO;AAChB,UAAGA,GAAG,IAAE,CAAR,EACQ;AACR,UAAGA,GAAG,GAAC,GAAP,EACI;AACRA,MAAAA,GAAG,GAACA,GAAG,IAAEA,GAAG,GAAC,CAAN,CAAP;AACC,KAND;;AAOAD,IAAAA,QAAQ,CAAC,CAAD,CAAR;AAEI,UAAME,MAAM,GAAGR,SAAS,EAAxB;AACA,wBACI,QAAC,gBAAD,OACQK,KADR;AAEI,MAAA,MAAM,EAAEG;AAFZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAjBkC;AAAA,YAUhBR,SAVgB;AAAA;AAAA,CAAnC;;AAmBA,MAAMS,gBAAN,SAA+Bf,KAAK,CAACgB,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKP,KAAL,CAAWG,MAAX,CAAkBK,MAA/B;;AACA,QAAI,CAACD,MAAL,EAAa;AACjBA,MAAAA,MAAM,GAAG,KAAKP,KAAL,CAAWO,MAApB;AAEK;;AACD,SAAKP,KAAL,CAAWR,YAAX,CAAwBe,MAAxB;AACA,SAAKP,KAAL,CAAWP,kBAAX,CAA8Bc,MAA9B;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,6BACH,QAAC,OAAD,OAAa,KAAKT,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWU,OAA7C;AACS,QAAA,wBAAwB,EAAE,KAAKV,KAAL,CAAWN;AAD9C;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;;AAjB0C;;AAoB/C,IAAIiB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACNF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADrB;AAENI,IAAAA,aAAa,EAAEF,KAAK,CAACC,WAAN,CAAkBC,aAF3B;AAGNP,IAAAA,MAAM,EAAEK,KAAK,CAACG,IAAN,CAAWR,MAHb;AAINS,IAAAA,MAAM,EAAEJ,KAAK,CAACG,IAAN,CAAWC;AAJb,GAAP;AAMA,CAPJ,C,CASA;;;AACA,eAAepB,OAAO,CAACL,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA,YAAD;AAAeC,EAAAA,kBAAf;AAAmCC,EAAAA;AAAnC,CAAlB,CAAR,EAClBG,iBADkB,EAElBC,UAFkB,CAAP,CAGbM,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfileThunk, ProfileThunkStatus, UpdateProfileThunkStatus} from \"../../Readux/Reducer-Profile\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthContainer} from \"../../HOC/AuthHOC\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\nlet factoria=(num)=>{\r\n    if(num!=1)\r\n            return\r\n    if(num>120)\r\n        return\r\nnum=num*(num-1)\r\n}\r\nfactoria(5)\r\n\r\n    const params = useParams();\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n        />\r\n    );\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userid = this.props.params.userId\r\n        if (!userid) {\r\n    userid = this.props.userid\r\n\r\n        }\r\n        this.props.ProfileThunk(userid)\r\n        this.props.ProfileThunkStatus(userid)\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     UpdateProfileThunkStatus={this.props.UpdateProfileThunkStatus}\r\n                     />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n     profile: state.ProfilePage.profile,\r\n     profilestatus: state.ProfilePage.profilestatus,\r\n     userid: state.Auth.userid,\r\n     isAuth: state.Auth.isAuth\r\n\r\n })}\r\n\r\n//const ProfileContainerwithRouter = withRouter(RedirectComponent)\r\nexport default compose(connect(mapStateToProps, {ProfileThunk, ProfileThunkStatus, UpdateProfileThunkStatus}),\r\n    WithAuthContainer,\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}