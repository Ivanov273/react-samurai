{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Project\\\\react2.0\\\\src\\\\HOC\\\\hocContainer.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.Auth.isAuth\n  };\n};\n\nexport const hocRedirect = Component => {\n  let RedirectContainer = props => {\n    console.log(this.props.isAuth);\n    if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 20\n    }, this);\n  };\n\n  let RedirectAuthComponent = connect(mapStateToPropsForRedirect)(RedirectContainer);\n  return RedirectAuthComponent;\n};","map":{"version":3,"sources":["C:/React/Project/react2.0/src/HOC/hocContainer.js"],"names":["React","Navigate","connect","mapStateToPropsForRedirect","state","isAuth","Auth","hocRedirect","Component","RedirectContainer","props","console","log","RedirectAuthComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AACA,IAAIC,0BAA0B,GAAEC,KAAD,IAAS;AACpC,SAAM;AACFC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADjB,GAAN;AAGH,CAJD;;AAMA,OAAO,MAAME,WAAW,GAAEC,SAAD,IAAc;AACnC,MAAIC,iBAAiB,GAAEC,KAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWL,MAAvB;AACA,QAAI,CAACK,KAAK,CAACL,MAAX,EAAmB,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACnB,wBAAO,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAJL;;AAKA,MAAIG,qBAAqB,GAAGX,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAA5B;AACA,SAAOI,qBAAP;AACC,CARE","sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect=(state)=>{\r\n    return{\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\n\r\nexport const hocRedirect=(Component)=> {\r\n    let RedirectContainer=(props)=>{\r\n            console.log(this.props.isAuth)\r\n            if (!props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...props} />\r\n        }\r\n    let RedirectAuthComponent = connect(mapStateToPropsForRedirect)(RedirectContainer)\r\n    return RedirectAuthComponent\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}