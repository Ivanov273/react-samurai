{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SETCOUNT = 'SETCOUNT';\nlet initstate = {\n  users: [],\n  TotalCount: 5\n};\n\nconst reducerUsers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SETUSERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const FollowUserAC = userid => ({\n  type: FOLLOW,\n  userid\n});\n_c = FollowUserAC;\nexport const UnFollowUserAC = userid => ({\n  type: UNFOLLOW,\n  userid\n});\n_c2 = UnFollowUserAC;\nexport const SetUsersAC = users => ({\n  type: SETUSERS,\n  users\n});\n_c3 = SetUsersAC;\nexport const SetTotalCountAC = totalcount => ({\n  type: SETCOUNT,\n  totalcount\n});\n_c4 = SetTotalCountAC;\nexport default reducerUsers;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FollowUserAC\");\n$RefreshReg$(_c2, \"UnFollowUserAC\");\n$RefreshReg$(_c3, \"SetUsersAC\");\n$RefreshReg$(_c4, \"SetTotalCountAC\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-Users.js"],"names":["FOLLOW","UNFOLLOW","SETUSERS","SETCOUNT","initstate","users","TotalCount","reducerUsers","state","action","type","map","u","id","userid","followed","FollowUserAC","UnFollowUserAC","SetUsersAC","SetTotalCountAC","totalcount"],"mappings":"AAEA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAIZC,EAAAA,UAAU,EAAE;AAJA,CAAhB;;AAOA,MAAMC,YAAY,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,MAAL;AACI,aAAO,EACX,GAAGQ,KADQ;AAEZH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,GAAZ,CAAgBC,CAAC,IAAE;AACtB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA2B;AACvB,mBAAO,EAAC,GAAGF,CAAJ;AAAMG,cAAAA,QAAQ,EAAE;AAAhB,aAAP;AACH;;AACG,iBAAOH,CAAP;AACP,SALM;AAFK,OAAP;;AASJ,SAAKX,QAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,GAAZ,CAAgBC,CAAC,IAAE;AACtB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA2B;AAEvB,mBAAO,EAAC,GAAGF,CAAJ;AAAMG,cAAAA,QAAQ,EAAE;AAAhB,aAAP;AAEH;;AACD,iBAAOH,CAAP;AAEH,SARM;AAFJ,OAAP;;AAaJ,SAAKV,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAgB,GAAGI,MAAM,CAACJ,KAA1B;AAFJ,OAAP;;AAIJ;AACI,aAAOG,KAAP;AA/BR;AAmCH,CArCD;;AAsCA,OAAO,MAAMQ,YAAY,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEV,MAAP;AAAcc,EAAAA;AAAd,CAAb,CAArB;KAAME,Y;AACb,OAAO,MAAMC,cAAc,GAAIH,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAET,QAAP;AAAiBa,EAAAA;AAAjB,CAAb,CAAvB;MAAMG,c;AACb,OAAO,MAAMC,UAAU,GAAIb,KAAD,KAAY;AAACK,EAAAA,IAAI,EAAER,QAAP;AAAiBG,EAAAA;AAAjB,CAAZ,CAAnB;MAAMa,U;AACb,OAAO,MAAMC,eAAe,GAAIC,UAAD,KAAiB;AAACV,EAAAA,IAAI,EAAEP,QAAP;AAAiBiB,EAAAA;AAAjB,CAAjB,CAAxB;MAAMD,e;AACb,eAAeZ,YAAf","sourcesContent":["\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SETUSERS = 'SETUSERS'\r\nconst SETCOUNT = 'SETCOUNT'\r\n\r\nlet initstate = {\r\n    users: [\r\n\r\n    ],\r\n    TotalCount: 5\r\n}\r\n\r\nconst reducerUsers = (state = initstate, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n        ...state,\r\n       users: state.users.map(u=>{\r\n           if (u.id === action.userid){\r\n               return {...u,followed: true}\r\n           }\r\n               return u\r\n       })\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if (u.id === action.userid){\r\n\r\n                        return {...u,followed: false}\r\n\r\n                    }\r\n                    return u\r\n\r\n                })\r\n\r\n            }\r\n        case SETUSERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users,...action.users]\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\nexport const FollowUserAC = (userid) => ({type: FOLLOW,userid})\r\nexport const UnFollowUserAC = (userid) => ({type: UNFOLLOW, userid})\r\nexport const SetUsersAC = (users) => ({type: SETUSERS, users})\r\nexport const SetTotalCountAC = (totalcount) => ({type: SETCOUNT, totalcount})\r\nexport default reducerUsers"]},"metadata":{},"sourceType":"module"}