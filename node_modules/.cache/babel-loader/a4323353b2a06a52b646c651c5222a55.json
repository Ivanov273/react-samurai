{"ast":null,"code":"import { LoginAPI, usersAPI as loginAPI, usersAPI } from \"../api/api\";\nconst SETAUTH = 'SETAUTH';\nconst DELETE_SETAUTH = 'DELETE_SETAUTH';\nlet initstate = {\n  userid: '',\n  login: '',\n  email: '',\n  isAuth: false\n};\n\nconst reducerAuth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SETAUTH:\n      return { ...state,\n        ...action.payload\n      };\n\n    case DELETE_SETAUTH:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const SetAuth = (id, login, email, isAuth) => ({\n  type: SETAUTH,\n  payload: {\n    id,\n    login,\n    email,\n    isAuth\n  }\n});\n_c = SetAuth;\nexport const AuthThunk = dispatch => {\n  return dispatch => {\n    usersAPI.apiAuth().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = response.data.data;\n        dispatch(SetAuth(id, login, email, true));\n      }\n    });\n  };\n};\n_c2 = AuthThunk;\nexport const LoginThunk = (email, password, rememberMe) => {\n  return dispatch => {\n    LoginAPI.authorize(email, password, rememberMe).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(AuthThunk());\n      }\n    });\n  };\n};\n_c3 = LoginThunk;\nexport const deleteLogin = () => {\n  return dispatch => {\n    LoginAPI.deleteauthorize().then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(SetAuth(null, null, null, false));\n      }\n    });\n  };\n};\nexport default reducerAuth;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SetAuth\");\n$RefreshReg$(_c2, \"AuthThunk\");\n$RefreshReg$(_c3, \"LoginThunk\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-Auth.js"],"names":["LoginAPI","usersAPI","loginAPI","SETAUTH","DELETE_SETAUTH","initstate","userid","login","email","isAuth","reducerAuth","state","action","type","payload","SetAuth","id","AuthThunk","dispatch","apiAuth","then","response","data","resultCode","LoginThunk","password","rememberMe","authorize","deleteLogin","deleteauthorize"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAQ,IAAIC,QAA9B,EAAwCD,QAAxC,QAAuD,YAAvD;AAEA,MAAME,OAAO,GAAG,SAAhB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAEZC,EAAAA,KAAK,EAAE,EAFK;AAGZC,EAAAA,KAAK,EAAE,EAHK;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAhB;;AAMA,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,OAAL;AACG,aAAO,EACH,GAAGQ,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIA,SAAKV,cAAL;AACA,aAAO,EACH,GAAGO,KADA;AAEJ,WAAGC,MAAM,CAACE;AAFN,OAAP;;AAIH;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAgBA,OAAO,MAAMI,OAAO,GAAG,CAACC,EAAD,EAAIT,KAAJ,EAAUC,KAAV,EAAgBC,MAAhB,MAA4B;AAACI,EAAAA,IAAI,EAAEV,OAAP;AAAeW,EAAAA,OAAO,EAAC;AAACE,IAAAA,EAAD;AAAIT,IAAAA,KAAJ;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA;AAAhB;AAAvB,CAA5B,CAAhB;KAAMM,O;AACb,OAAO,MAAME,SAAS,GAAIC,QAAD,IAAa;AAClC,SAAQA,QAAD,IAAa;AAChBjB,IAAAA,QAAQ,CAACkB,OAAT,GAAmBC,IAAnB,CAAwBC,QAAQ,IAAI;AAChC,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChC,YAAI;AAACP,UAAAA,EAAD;AAAIT,UAAAA,KAAJ;AAAUC,UAAAA;AAAV,YAAmBa,QAAQ,CAACC,IAAT,CAAcA,IAArC;AACAJ,QAAAA,QAAQ,CAACH,OAAO,CAACC,EAAD,EAAIT,KAAJ,EAAUC,KAAV,EAAgB,IAAhB,CAAR,CAAR;AACJ;AACP,KALG;AAOP,GARG;AASH,CAVM;MAAMS,S;AAWb,OAAO,MAAMO,UAAU,GAAG,CAAChB,KAAD,EAAOiB,QAAP,EAAgBC,UAAhB,KAA8B;AAEpD,SAAQR,QAAD,IAAa;AAChBlB,IAAAA,QAAQ,CAAC2B,SAAT,CAAmBnB,KAAnB,EAAyBiB,QAAzB,EAAkCC,UAAlC,EAA8CN,IAA9C,CAAmDC,QAAQ,IAAI;AAC3D,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCL,QAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACJ;AACP,KAJG;AAKP,GANG;AAOH,CATM;MAAMO,U;AAUb,OAAO,MAAMI,WAAW,GAAG,MAAK;AAC5B,SAAQV,QAAD,IAAa;AAChBlB,IAAAA,QAAQ,CAAC6B,eAAT,GAA2BT,IAA3B,CAAgCC,QAAQ,IAAI;AACxC,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCL,QAAAA,QAAQ,CAACH,OAAO,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,CAAR,CAAR;AACJ;AACP,KAJG;AAKP,GANG;AAOH,CARM;AAUP,eAAeL,WAAf","sourcesContent":["import {LoginAPI, usersAPI as loginAPI, usersAPI} from \"../api/api\";\r\n\r\nconst SETAUTH = 'SETAUTH'\r\nconst DELETE_SETAUTH = 'DELETE_SETAUTH'\r\n\r\nlet initstate = {\r\n    userid: '',\r\n    login: '',\r\n    email: '',\r\n    isAuth: false\r\n}\r\nconst reducerAuth = (state = initstate, action) => {\r\n    switch (action.type) {\r\n        case SETAUTH:\r\n           return {\r\n               ...state,\r\n               ...action.payload\r\n           }\r\n           case DELETE_SETAUTH:\r\n           return {\r\n               ...state,\r\n              ...action.payload\r\n           }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const SetAuth = (id,login,email,isAuth) => ({type: SETAUTH,payload:{id,login,email,isAuth}})\r\nexport const AuthThunk = (dispatch)=> {\r\n    return (dispatch)=> {\r\n        usersAPI.apiAuth().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id,login,email} = response.data.data\r\n                dispatch(SetAuth(id,login,email,true))\r\n           }\r\n    })\r\n\r\n}\r\n}\r\nexport const LoginThunk = (email,password,rememberMe)=> {\r\n\r\n    return (dispatch)=> {\r\n        LoginAPI.authorize(email,password,rememberMe).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(AuthThunk())\r\n           }\r\n    })\r\n}\r\n}\r\nexport const deleteLogin = ()=> {\r\n    return (dispatch)=> {\r\n        LoginAPI.deleteauthorize().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(SetAuth(null,null,null,false))\r\n           }\r\n    })\r\n}\r\n}\r\n\r\nexport default reducerAuth"]},"metadata":{},"sourceType":"module"}