{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nlet initstate = {\n  PostData: [{\n    id: 1,\n    followed: true,\n    name: 'Dmitry',\n    location: {\n      country: 'China',\n      city: 'Saratov'\n    },\n    message: 'it kamasutra'\n  }, {\n    id: 1,\n    followed: true,\n    name: 'Dmitry',\n    location: {\n      country: 'China',\n      city: 'Saratov'\n    },\n    message: 'it kamasutra'\n  }, {\n    id: 1,\n    followed: true,\n    name: 'Dmitry',\n    location: {\n      country: 'China',\n      city: 'Saratov'\n    },\n    message: 'it kamasutra'\n  }, {\n    id: 1,\n    followed: true,\n    name: 'Dmitry',\n    location: {\n      country: 'China',\n      city: 'Saratov'\n    },\n    message: 'it kamasutra'\n  }],\n  nameButton: 'It kamasutra'\n};\n\nconst reducerUsers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport const ActionCreatorAddPost = () => ({\n  type: FOLLOW,\n  user\n});\n_c = ActionCreatorAddPost;\nexport const ActionCreatorUpdatePostText = text => ({\n  type: UNFOLLOW,\n  user\n});\n_c2 = ActionCreatorUpdatePostText;\nexport default reducerUsers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActionCreatorAddPost\");\n$RefreshReg$(_c2, \"ActionCreatorUpdatePostText\");","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Readux/Reducer-Users.js"],"names":["FOLLOW","UNFOLLOW","initstate","PostData","id","followed","name","location","country","city","message","nameButton","reducerUsers","state","action","type","ActionCreatorAddPost","user","ActionCreatorUpdatePostText","text"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,QAAQ,EAAE,CACN;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAC,IAAjB;AAAuBC,IAAAA,IAAI,EAAE,QAA7B;AAAuCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,OAAO,EAAE,OAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAhD;AAAoFC,IAAAA,OAAO,EAAE;AAA7F,GADM,EAEN;AAACN,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAC,IAAjB;AAAuBC,IAAAA,IAAI,EAAE,QAA7B;AAAuCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,OAAO,EAAE,OAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAhD;AAAoFC,IAAAA,OAAO,EAAE;AAA7F,GAFM,EAGN;AAACN,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAC,IAAjB;AAAuBC,IAAAA,IAAI,EAAE,QAA7B;AAAuCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,OAAO,EAAE,OAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAhD;AAAoFC,IAAAA,OAAO,EAAE;AAA7F,GAHM,EAIN;AAACN,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAC,IAAjB;AAAuBC,IAAAA,IAAI,EAAE,QAA7B;AAAuCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,OAAO,EAAE,OAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAhD;AAAoFC,IAAAA,OAAO,EAAE;AAA7F,GAJM,CADE;AAQZC,EAAAA,UAAU,EAAE;AARA,CAAhB;;AAUA,MAAMC,YAAY,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBX,SAAsB;AAAA,MAAXY,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AAGI;AACI,aAAOF,KAAP;AAJR;AAMH,CARD;;AASA,OAAO,MAAMG,oBAAoB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEf,MAAP;AAAciB,EAAAA;AAAd,CAAP,CAA7B;KAAMD,oB;AACb,OAAO,MAAME,2BAA2B,GAAIC,IAAD,KAAW;AAACJ,EAAAA,IAAI,EAAEd,QAAP;AAAiBgB,EAAAA;AAAjB,CAAX,CAApC;MAAMC,2B;AACb,eAAeN,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\n\r\nlet initstate = {\r\n    PostData: [\r\n        {id: 1, followed:true, name: 'Dmitry', location:{country: 'China',city: 'Saratov'} ,message: 'it kamasutra'},\r\n        {id: 1, followed:true, name: 'Dmitry', location:{country: 'China',city: 'Saratov'} ,message: 'it kamasutra'},\r\n        {id: 1, followed:true, name: 'Dmitry', location:{country: 'China',city: 'Saratov'} ,message: 'it kamasutra'},\r\n        {id: 1, followed:true, name: 'Dmitry', location:{country: 'China',city: 'Saratov'} ,message: 'it kamasutra'}\r\n\r\n    ],\r\n    nameButton: 'It kamasutra'\r\n}\r\nconst reducerUsers = (state = initstate, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const ActionCreatorAddPost = () => ({type: FOLLOW,user})\r\nexport const ActionCreatorUpdatePostText = (text) => ({type: UNFOLLOW, user})\r\nexport default reducerUsers"]},"metadata":{},"sourceType":"module"}