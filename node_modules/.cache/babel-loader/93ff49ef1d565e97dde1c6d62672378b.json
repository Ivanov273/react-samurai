{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogItem';import MessageItem from'./MessageItem/MessageItem';import{Navigate}from'react-router-dom';import{Field,reduxForm}from\"redux-form\";import{renderFieldDialog}from\"../FormControls/FormsControl\";import{alphaNumeric,maxLength30,minLength2}from\"../../utils/validators\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dialogs=function Dialogs(props){var AddDialog=function AddDialog(values){props.onaddDialogs(values.dialog);};var DialogMass=props.DialogData.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id},d.id);});var MessagesElement=props.TextData.map(function(t){return/*#__PURE__*/_jsx(MessageItem,{text:t.text},t.id);});if(!props.Auth)return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});return/*#__PURE__*/_jsxs(\"div\",{className:s.container,children:[/*#__PURE__*/_jsx(\"div\",{className:s.dialogs,children:/*#__PURE__*/_jsx(\"div\",{className:s.dialog_items,children:DialogMass})}),/*#__PURE__*/_jsxs(\"div\",{className:s.messages,children:[MessagesElement,/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DialogFormRedux,{onSubmit:AddDialog})})]})]});};var DialodForm=function DialodForm(props){var handleSubmit=props.handleSubmit;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Enter your message\",name:\"dialog\",component:renderFieldDialog,type:\"text\",validate:[maxLength30,minLength2,alphaNumeric]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]});};export default Dialogs;var DialogFormRedux=reduxForm({// a unique name for the form\nform:'loginform'})(DialodForm);","map":{"version":3,"sources":["C:/React/Project/react2.0/src/Component/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","MessageItem","Navigate","Field","reduxForm","renderFieldDialog","alphaNumeric","maxLength30","minLength2","Dialogs","props","AddDialog","values","onaddDialogs","dialog","DialogMass","DialogData","map","d","name","id","MessagesElement","TextData","t","text","Auth","container","dialogs","dialog_items","messages","DialodForm","handleSubmit","DialogFormRedux","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,iBAAR,KAAgC,8BAAhC,CACA,OAAQC,YAAR,CAAsBC,WAAtB,CAAmCC,UAAnC,KAAoD,wBAApD,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CACxBF,KAAK,CAACG,YAAN,CAAmBD,MAAM,CAACE,MAA1B,EACH,CAFD,CAGA,GAAIC,CAAAA,UAAU,CAAGL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqB,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAAqC,EAAE,CAAED,CAAC,CAACE,EAA3C,EAA+BF,CAAC,CAACE,EAAjC,CAAJ,EAAtB,CAAjB,CACA,GAAIC,CAAAA,eAAe,CAAGX,KAAK,CAACY,QAAN,CAAeL,GAAf,CAAmB,SAAAM,CAAC,qBAAI,KAAC,WAAD,EAAwB,IAAI,CAAEA,CAAC,CAACC,IAAhC,EAAkBD,CAAC,CAACH,EAApB,CAAJ,EAApB,CAAtB,CACA,GAAG,CAACV,KAAK,CAACe,IAAV,CAAgB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAChB,mBACI,aAAK,SAAS,CAAE1B,CAAC,CAAC2B,SAAlB,wBACI,YAAK,SAAS,CAAE3B,CAAC,CAAC4B,OAAlB,uBACI,YAAK,SAAS,CAAE5B,CAAC,CAAC6B,YAAlB,UACKb,UADL,EADJ,EADJ,cAMI,aAAK,SAAS,CAAEhB,CAAC,CAAC8B,QAAlB,WACKR,eADL,cAEI,kCACI,KAAC,eAAD,EAAiB,QAAQ,CAAEV,SAA3B,EADJ,EAFJ,GANJ,GADJ,CAeH,CAtBD,CAwBA,GAAMmB,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACpB,KAAD,CAAS,CACtB,GAAOqB,CAAAA,YAAP,CAAqBrB,KAArB,CAAOqB,YAAP,CACA,mBACI,cAAM,QAAQ,CAAEA,YAAhB,wBACI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAC,oBAAnB,CAAwC,IAAI,CAAC,QAA7C,CAAsD,SAAS,CAAE1B,iBAAjE,CAAoF,IAAI,CAAC,MAAzF,CAAgG,QAAQ,CAAE,CAACE,WAAD,CAAaC,UAAb,CAAwBF,YAAxB,CAA1G,EADJ,EADJ,cAIgB,eAAQ,IAAI,CAAC,QAAb,oBAJhB,GADJ,CASH,CAXD,CAYA,cAAeG,CAAAA,OAAf,CACA,GAAIuB,CAAAA,eAAe,CAAG5B,SAAS,CAAC,CAC5B;AACA6B,IAAI,CAAE,WAFsB,CAAD,CAAT,CAGnBH,UAHmB,CAAtB","sourcesContent":["import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderFieldDialog} from \"../FormControls/FormsControl\";\r\nimport {alphaNumeric, maxLength30, minLength2} from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let AddDialog = (values) => {\r\n        props.onaddDialogs(values.dialog)\r\n    }\r\n    let DialogMass = props.DialogData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let MessagesElement = props.TextData.map(t => <MessageItem key={t.id} text={t.text}/>)\r\n    if(!props.Auth) return <Navigate to={\"/login\"} />\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialog_items}>\r\n                    {DialogMass}\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                {MessagesElement}\r\n                <div>\r\n                    <DialogFormRedux onSubmit={AddDialog}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialodForm=(props)=>{\r\n    const {handleSubmit}=props\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <Field placeholder='Enter your message' name='dialog' component={renderFieldDialog} type='text' validate={[maxLength30,minLength2,alphaNumeric]} />\r\n            </div>\r\n                        <button type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default Dialogs\r\nlet DialogFormRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'loginform'\r\n})(DialodForm)\r\n\r\n"]},"metadata":{},"sourceType":"module"}